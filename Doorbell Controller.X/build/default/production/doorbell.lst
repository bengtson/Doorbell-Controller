MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; Program - dmxpack.s
                      00003 ;
                      00004 ; Written by Michael Bengtson  20-Oct-2013
                      00005 ;
                      00006 ; This is the controller for the 4 channel DMX pack.  This controls 4 light
                      00007 ; circuits when connected to the DMX bus.
                      00008 ;
                      00009 ; Processor is PIC16F1508.  This receives the DMX stream, watches the zero-
                      00010 ; crossing detector and feeds the Pulse With Modulation engines.
                      00011 ;
                      00012 ; Pin out for the chip is as follow:
                      00013 ;
                      00014 ;       Pin 01 : Vdd : +3.3V
                      00015 ;       Pin 02 : RA5 : Clock In  20Mhz Resonator
                      00016 ;       Pin 03 : RA4 : Clock Out 20Mhz Resonator
                      00017 ;       Pin 04 : RA3 : ICSP - Program
                      00018 ;       Pin 05 : RC5 : PWM 1 : Driver for channel 0
                      00019 ;       Pin 06 : RC4 : Debug Pin - DMX Receive UART
                      00020 ;       Pin 07 : RC3 : PWM 2 : Driver for channel 1
                      00021 ;       Pin 08 : RC6 : Debug Pin - Zero Cross
                      00022 ;       Pin 09 : RC7 : Debug Pin - Timer 1
                      00023 ;       Pin 10 : RB7
                      00024 ;       Pin 11 : RB6
                      00025 ;       Pin 12 : RB5 : DMX Receive
                      00026 ;       Pin 13 : RB4
                      00027 ;       Pin 14 : RC2 : C12IN2 - Zero Crossing Input
                      00028 ;       Pin 15 : RC1 : PWM 4 : Driver for channel 3
                      00029 ;       Pin 16 : RC0
                      00030 ;       Pin 17 : RA2 : PWM 3 : Driver for channel 2
                      00031 ;       Pin 18 : RA1 : ICSP - Clock
                      00032 ;       Pin 19 : RA0 : ICSP - Data
                      00033 ;       Pin 20 : Vss : 0.0V
                      00034 
                      00035 ; 11-Jul-2013 : Turned on the watch dog timer through config bits.  Using the
                      00036 ;               default 2 second timeout value.  Timer is cleared each time a
                      00037 ;               DMX packet is received.  If not received, the timer will reset
                      00038 ;               the board.  Was seeing deaf boards that were still holding a
                      00039 ;               level.  Processor was triggering channels at the last level
                      00040 ;               it received but it was not getting new levels on the DMX
                      00041 ;               channel.  Watch dog is a weak fix.  Need to find out why the
                      00042 ;               boards are going deaf.
                      00043 
                      00044 ; 16-Jul-2013 : This is a version of the code that will allow all the boards
                      00045 ;               to be programmed with the same code.  Once the boards have had
                      00046 ;               DMX channels assigned, new software can be downloaded without
                      00047 ;               setting the channel map again.
                      00048 
                      00049 ; 16-Jul-2013 : If a channel is set to 0, it previous was triggering the triac
                      00050 ;               for a very small period of time.  Because of zero cross issues
                      00051 ;               it would sometimes trigger a full cycle, flashing like a
                      00052 ;               firefly.  Now, if the level is 0, the triac is never turned on.
                      00053 
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ; 16-Jul-2013 : If a channel is set to 255 (full on), it would only get a single
                      00055 ;               strobe at the start of the cycle.  Now, a full on level will
                      00056 ;               get strobes for the entire cycle.  Note that the trigger is still
                      00057 ;               turned off in each level position, before being turned back on.
                      00058 
                      00059 ; This is a prototype program to manage an illuminated encoder to be used in
                      00060 ; the Tack Sa Mycket home we are building.  This is only a prototype since
                      00061 ; the chip used here will likely be different than the chip in the final
                      00062 ; keypad controller.
                      00063 ;
                      00064 ; A timer is set to trigger every 1ms.  This will read the encoder bits and
                      00065 ; check the led pwm status.  LEDs can be set from 0-15 for their intensity.
                      00066 ;
                      00067 ; Need a little state machine to determine the direction of the encoder.
                      00068 
                      00069         list    p=16f1508
                      00070         include <p16F1508.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F1508 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2012 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      01952         LIST
                      00071 
                      00072 ; Configuration bits are listed here.  There are two configuration words.
                      00073 ;
                      00074 ; CONFIG1 : 0x00e2  : 0x0fa with watch dog timer.
                      00075 ;
                      00076 ;       Bit 13    :   0 : Disable Fail Safe Clock Monitor
                      00077 ;       Bit 12    :   0 : Disable Internal/External Switch Over
                      00078 ;
                      00079 ;       Bit 11    :   0 : Enable CLKOUT on the CLKOUT Pin
                      00080 ;       Bit 10-09 :  00 : Disable Brown-Out Detection
                      00081 ;       Bit 08    :   0 : Unimplemented  Reads as "1"
                      00082 
                      00083 ;       Bit 07    :   1 : Disable Code Protection
                      00084 ;       Bit 06    :   1 : MCLR is Reset Signal
                      00085 ;       Bit 05    :   1 : Disable Power Up Timer
                      00086 ;       Bit 04-03 :  00 : Disable Watch Dog Timer
                      00087 ;       Bit 04-03 :  11 : Enable Watch Dog Timer.
                      00088 ;       Bit 02-00 : 010 : HS Oscillator On OSC1 and OSC2
                      00089 ;
                      00090 ; CONFIG2 : 0x0803
                      00091 ;
                      00092 ;       Bit 13    :   0 : High Voltage Programming on MCLR
                      00093 ;       Bit 12    :   0 : In-Circuit Debugger Enabled
                      00094 
                      00095 ;       Bit 11    :   1 : Disable Low Power Brown Out Reset
                      00096 ;       Bit 10    :   0 : Brown Out High Trip Point Selected (Not Used)
                      00097 ;       Bit 09    :   0 : Disable Stack Over/Underflow Reset
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00098 ;       Bit 08-02 :   0 : Unimplemented  Reads as "1"
                      00099 ;       Bit 01-00 :  11 : Write Protection Off
                      00100 
8007   00FA           00101         __CONFIG        _CONFIG1, 0x00fa
8008   0803           00102         __CONFIG        _CONFIG2, 0x0803
                      00103 
                      00104 ;  Define parameters about this device.
  00000002            00105 DEVICE_TYPE_DMX_DEVICE  equ             002H
  00000000            00106 DEVICE_VERSION_MINOR    equ             000H
  00000001            00107 DEVICE_VERSION_MAJOR    equ             001H
                      00108 
                      00109 ;  About the channel assignments ...
                      00110 ;
                      00111 ;  The block of code at 0x20 (note that it is on a 32 byte boundary) holds the
                      00112 ;  DMX channel assignments for the board channels 0-3.  It's a small map table.
                      00113 ;  The table can be commented out if the board already has had the map set.
                      00114 ;  If the board has not had the map set, then the channel addresses should be
                      00115 ;  set (CHANNEL_ADDRESS_0 through 3), the code uncommented and the board loaded.
                      00116 ;
                      00117 ;  When the board starts up, the addresses are read from the program flash at
                      00118 ;  0x20 and placed into high ram for easy accessibility.
                      00119 
                      00120 ;  Define the DMX addresses for each channel.  These do not need to be
                      00121 ;  sequential and may be the same as in another DMX device.
                      00122 
  00000018            00123 CHANNEL_ADDRESS_0           equ     .24
  00000019            00124 CHANNEL_ADDRESS_1           equ     .25
  0000001A            00125 CHANNEL_ADDRESS_2           equ     .26
  0000001B            00126 CHANNEL_ADDRESS_3           equ     .27
                      00127 
                      00128 ;  Uncomment this table if the board needs to have it's channel map set.
                      00129 
                      00130     org     0x20
0020                  00131 channel_address_table
0020   0018           00132 CHANNEL_ADD_0_LOW   dw  CHANNEL_ADDRESS_0&0xff
0021   0000           00133 CHANNEL_ADD_0_HIGH  dw  CHANNEL_ADDRESS_0>>8
0022   0019           00134 CHANNEL_ADD_1_LOW   dw  CHANNEL_ADDRESS_1&0xff
0023   0000           00135 CHANNEL_ADD_1_HIGH  dw  CHANNEL_ADDRESS_1>>8
0024   001A           00136 CHANNEL_ADD_2_LOW   dw  CHANNEL_ADDRESS_2&0xff
0025   0000           00137 CHANNEL_ADD_2_HIGH  dw  CHANNEL_ADDRESS_2>>8
0026   001B           00138 CHANNEL_ADD_3_LOW   dw  CHANNEL_ADDRESS_3&0xff
0027   0000           00139 CHANNEL_ADD_3_HIGH  dw  CHANNEL_ADDRESS_3>>8
                      00140 
                      00141 ;  Define the locations in RAM necessary.  Valid RAM locations are 20-5F.
                      00142 ;  Only 64 bytes to use them wisely.
                      00143 
  00000020            00144 ram             equ     0x20            ; First address of available RAM
                      00145 
                      00146 ;  Define the locations in RAM for holding the channel addresses.
                      00147     cblock  0x70
  00000070            00148         dmx_0_low
  00000071            00149         dmx_0_high
  00000072            00150         dmx_1_low
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000073            00151         dmx_1_high
  00000074            00152         dmx_2_low
  00000075            00153         dmx_2_high
  00000076            00154         dmx_3_low
  00000077            00155         dmx_3_high
                      00156     endc
                      00157 
                      00158 ;  Define all the variables used for this code.  These should fit between
                      00159 ;  0x20 and 0x7f.
                      00160         cblock 0x20
                      00161         endc
                      00162 
                      00163 ; ------------------------------------------------------------------------------
                      00164 ;
                      00165 ;  Vector Table
                      00166 ;
                      00167 ;  Setup the reset and interrupt vectors for the chip.
                      00168 
                      00169         org             0x00            ; Set program memory base at reset vector 0x00.
0000   2???           00170         goto    boot            ; Go to boot code.
                      00171 
                      00172         org             0x04
0004   2???           00173         goto    system_isr                      ; Handle interrupts.
                      00174 
                      00175 ;
                      00176 ; ------------------------------------------------------------------------------
                      00177 
                      00178 ; ------------------------------------------------------------------------------
                      00179 ;
                      00180 ;  System Module
                      00181 ;
                      00182 ;  Here is where we initialize all the functions on the chip.
                      00183 
                      00184         org             0x40
                      00185 
                      00186 ;  Routine - system_init : Initializes the processor.
0040                  00187 system_init
                      00188 
0040   0020           00189         banksel INTCON
0041   138B           00190         bcf             INTCON,GIE              ; Disable all interrupts.
0042   120B           00191         bcf             INTCON,INTE
                      00192 
                      00193     ; Set the clock to external 20Mhz.
0043   0021           00194     banksel OSCCON
0044   3000           00195     movlw   0x00            ; Clock is external
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0045   0099           00196     movwf   OSCCON
                      00197 
                      00198     ; Set weak pull up resisters to be controlled individually.
0046   0021           00199     banksel OPTION_REG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0047   1395           00200     bcf     OPTION_REG,NOT_WPUEN
                      00201 
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00202     ; Set all ports to not be analog.  Individual drivers can change the bits.
0048   0023           00203     banksel ANSELC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0049   018E           00204     clrf ANSELC
                      00205 
004A   0023           00206     banksel ANSELB
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
004B   018D           00207     clrf    ANSELB
                      00208 
004C   0023           00209     banksel ANSELA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
004D   018C           00210     clrf    ANSELA
                      00211 
                      00212     ;  We are done setting everything up, go to main.
004E   0008           00213         return          ; All done so return.
                      00214 
                      00215 ;  Routine - system_start : This final system startup items such as
                      00216 ;  enabling interrupts.
004F                  00217 system_start
                      00218 
                      00219         ;  Enable interrupts.
004F   0020           00220     banksel INTCON
0050   170B           00221     bsf     INTCON,PEIE     ; Enable peripheral interrupts.
0051   178B           00222     bsf     INTCON,GIE      ; Enable global interrupts.
                      00223 
                      00224     ;  Return to the caller.
0052   0008           00225     return
                      00226 
                      00227 
                      00228 ;  Routine - system_isr : This routine handles the interrupts for the
                      00229 ;  processor.  Simply save state then call each potential interrupt
                      00230 ;  source.
                      00231 
0053                  00232 system_isr
                      00233 
0053   2???           00234         call    timer_isr
0054   2???           00235     call    comparator_isr
                      00236 ;    call    uart_isr
                      00237 
0055                  00238 system_isr_return
0055   0009           00239         retfie
                      00240 
                      00241 ;  Routine - system_halt : If there are any errors, then the code jumps here
                      00242 ;  to hopefully report the error.
                      00243 
0056                  00244 system_halt
0056   2???           00245     goto    system_halt
                      00246 
                      00247 ;  System Module : END
                      00248 ;
                      00249 ; ------------------------------------------------------------------------------
                      00250 
                      00251 
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00252 ; ------------------------------------------------------------------------------
                      00253 ;
                      00254 ;  DMX Module
                      00255 ;
                      00256 ;  DMX module provides support for the DMX channels.
                      00257 
0057                  00258 dmx_init
0057   0023           00259     BANKSEL PMADRL          ; Select Bank for PMCON registers
0058   3000           00260     MOVLW   0    ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0059   0092           00261     MOVWF   PMADRH          ; Store MSB of address
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
005A   1315           00262     BCF     PMCON1,CFGS     ; Do not select Configuration Space
                      00263 
005B   3020           00264     MOVLW   0x20
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
005C   0091           00265     MOVWF   PMADRL          ; Store LSB of address
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
005D   1415           00266     BSF     PMCON1,RD       ; Initiate read
005E   0000           00267     NOP                     ; Ignored (Figure 10-2)
005F   0000           00268     NOP                     ; Ignored (Figure 10-2)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0060   0813           00269     MOVF    PMDATL,W        ; Get LSB of word
0061   00F0           00270     movwf   dmx_0_low
                      00271 ;    MOVF    PMDATH,W        ; Get MSB of word
                      00272 ;    MOVWF   PROG_DATA_HI    ; Store in user location
                      00273 ;    BCF     PMCON1,RD
                      00274 
0062   3021           00275     MOVLW   0x21
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0063   0091           00276     MOVWF   PMADRL          ; Store LSB of address
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0064   1415           00277     BSF     PMCON1,RD       ; Initiate read
0065   0000           00278     NOP                     ; Ignored (Figure 10-2)
0066   0000           00279     NOP                     ; Ignored (Figure 10-2)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0067   0813           00280     MOVF    PMDATL,W        ; Get LSB of word
0068   00F1           00281     movwf   dmx_0_high
                      00282 ;    MOVF    PMDATH,W        ; Get MSB of word
                      00283 ;    BCF     PMCON1,RD
                      00284 
0069   3022           00285     MOVLW   0x22
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006A   0091           00286     MOVWF   PMADRL          ; Store LSB of address
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006B   1415           00287     BSF     PMCON1,RD       ; Initiate read
006C   0000           00288     NOP                     ; Ignored (Figure 10-2)
006D   0000           00289     NOP                     ; Ignored (Figure 10-2)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006E   0813           00290     MOVF    PMDATL,W        ; Get LSB of word
006F   00F2           00291     movwf   dmx_1_low
                      00292 
0070   3023           00293     MOVLW   0x23
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0071   0091           00294     MOVWF   PMADRL          ; Store LSB of address
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0072   1415           00295     BSF     PMCON1,RD       ; Initiate read
0073   0000           00296     NOP                     ; Ignored (Figure 10-2)
0074   0000           00297     NOP                     ; Ignored (Figure 10-2)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0075   0813           00298     MOVF    PMDATL,W        ; Get LSB of word
0076   00F3           00299     movwf   dmx_1_high
                      00300 
0077   3024           00301     MOVLW   0x24
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0078   0091           00302     MOVWF   PMADRL          ; Store LSB of address
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0079   1415           00303     BSF     PMCON1,RD       ; Initiate read
007A   0000           00304     NOP                     ; Ignored (Figure 10-2)
007B   0000           00305     NOP                     ; Ignored (Figure 10-2)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
007C   0813           00306     MOVF    PMDATL,W        ; Get LSB of word
007D   00F4           00307     movwf   dmx_2_low
                      00308 
007E   3025           00309     MOVLW   0x25
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
007F   0091           00310     MOVWF   PMADRL          ; Store LSB of address
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0080   1415           00311     BSF     PMCON1,RD       ; Initiate read
0081   0000           00312     NOP                     ; Ignored (Figure 10-2)
0082   0000           00313     NOP                     ; Ignored (Figure 10-2)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0083   0813           00314     MOVF    PMDATL,W        ; Get LSB of word
0084   00F5           00315     movwf   dmx_2_high
                      00316 
0085   3026           00317     MOVLW   0x26
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0086   0091           00318     MOVWF   PMADRL          ; Store LSB of address
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0087   1415           00319     BSF     PMCON1,RD       ; Initiate read
0088   0000           00320     NOP                     ; Ignored (Figure 10-2)
0089   0000           00321     NOP                     ; Ignored (Figure 10-2)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
008A   0813           00322     MOVF    PMDATL,W        ; Get LSB of word
008B   00F6           00323     movwf   dmx_3_low
                      00324 
008C   3027           00325     MOVLW   0x27
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
008D   0091           00326     MOVWF   PMADRL          ; Store LSB of address
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
008E   1415           00327     BSF     PMCON1,RD       ; Initiate read
008F   0000           00328     NOP                     ; Ignored (Figure 10-2)
0090   0000           00329     NOP                     ; Ignored (Figure 10-2)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0091   0813           00330     MOVF    PMDATL,W        ; Get LSB of word
0092   00F7           00331     movwf   dmx_3_high
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00332 
                      00333 ;    movlw   LOW(CHANNEL_ADDRESS_0)
                      00334 ;    movwf   dmx_0_low
                      00335 ;    movlw   HIGH(CHANNEL_ADDRESS_0);
                      00336 ;    movwf   dmx_0_high
                      00337 ;    movlw   LOW(CHANNEL_ADDRESS_1)
                      00338 ;    movwf   dmx_1_low
                      00339 ;    movlw   HIGH(CHANNEL_ADDRESS_1);
                      00340 ;    movwf   dmx_1_high
                      00341 ;    movlw   LOW(CHANNEL_ADDRESS_2)
                      00342 ;    movwf   dmx_2_low
                      00343 ;    movlw   HIGH(CHANNEL_ADDRESS_2);
                      00344 ;    movwf   dmx_2_high
                      00345 ;    movlw   LOW(CHANNEL_ADDRESS_3)
                      00346 ;    movwf   dmx_3_low
                      00347 ;    movlw   HIGH(CHANNEL_ADDRESS_3);
                      00348 ;    movwf   dmx_3_high
                      00349 
                      00350     ;  Return to the caller.
0093   0008           00351     return
                      00352 
                      00353 ;  DMX Module : END
                      00354 ;
                      00355 ; ------------------------------------------------------------------------------
                      00356 
                      00357 
                      00358 ; ------------------------------------------------------------------------------
                      00359 ;
                      00360 ;  Comparator Module
                      00361 ;
                      00362 ;  Comparator module provides zero crossing detection and handling.
                      00363 
                      00364         cblock
  00000020            00365         delay
                      00366         endc
                      00367 
                      00368 ;  Routine - comparator_init : Initializes all the settings necessary to
                      00369 ;  generate an interrupt for the zero crossing circuitry.
                      00370 
0094                  00371 comparator_init
                      00372 
                      00373     ;  Start by setting up the Fixed Voltage Reference Control Register.  This
                      00374     ;  should set a reference voltage of 2.048V used for the comparator.
0094   0022           00375     banksel FVRCON
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0095   1797           00376     bsf     FVRCON,FVREN        ;  Enable the reference generator.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0096   1597           00377     bsf     FVRCON,CDAFVR1       ;  Set reference to 2.048V
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0097   1117           00378     bcf     FVRCON,CDAFVR0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0098   1097           00379     bcf     FVRCON,ADFVR1       ;  Turn off the ADC reference.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0099   1017           00380     bcf     FVRCON,ADFVR0
                      00381 
                      00382     ;  Setup the two comparator control registers.
009A   0022           00383     banksel CM1CON0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
009B   1391           00384     bcf     CM1CON0,C1ON        ;  Disable the comparator for a moment.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
009C   1291           00385     bcf     CM1CON0,C1OE        ;  Output is only used internally.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
009D   1211           00386     bcf     CM1CON0,C1POL       ;  Invert the output.  Interrupt on leading edge.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
009E   1511           00387     bsf     CM1CON0,C1SP        ;  Use high-speed comparisons.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
009F   1091           00388     bcf     CM1CON0,C1HYS       ;  No hysterisis needed.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A0   1011           00389     bcf     CM1CON0,C1SYNC      ;  Output is asynchronous.
                      00390 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A1   1792           00391     bsf     CM1CON1,C1INTP      ;  Interrupt on negative going edge.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A2   1312           00392     bcf     CM1CON1,C1INTN
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A3   1692           00393     bsf     CM1CON1,C1PCH1      ;  Positive comparator input from Fixed Ref.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A4   1212           00394     bcf     CM1CON1,C1PCH0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A5   1112           00395     bcf     CM1CON1,C1NCH2      ;  Negative comparator input from ac signal.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A6   1492           00396     bsf     CM1CON1,C1NCH1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A7   1014           00397     bcf     CM2CON1,C1NCH0
                      00398 
                      00399     ;  Setup the input signal for analog input.
00A8   0023           00400     banksel ANSELC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A9   150E           00401     bsf     ANSELC,ANSC2
                      00402 
                      00403     ;  Setup the debug port, PORTC, pin 6.
00AA   0021           00404     banksel TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00AB   130E           00405     bcf     TRISC,TRISC6
00AC   0020           00406     banksel PORTC
00AD   130E           00407     bcf     PORTC,RC6
                      00408 
                      00409     ;  Turn on the comparator.
00AE   0022           00410     banksel CM1CON0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00AF   1791           00411     bsf     CM1CON0,C1ON        ;  Enable the comparator.
                      00412 
                      00413     ;  Enable the interupts.
00B0   0021           00414     banksel PIE2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B1   1692           00415     bsf     PIE2,C1IE
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00416 
                      00417     ;  Return to the caller.
00B2   0008           00418     return
                      00419 
                      00420 ;  Routine - comparator_isr : This handles the zero crossing interrupt.
                      00421 
00B3                  00422 comparator_isr
                      00423 
00B3   0020           00424     banksel PIR2
00B4   1E92           00425     btfss   PIR2,C1IF
00B5   0008           00426     return
                      00427 
00B6   1292           00428     bcf     PIR2,C1IF
                      00429 
                      00430     ;  Synchronize Timer 1 to AC line.
                      00431 
                      00432 ;    banksel delay
                      00433 ;    movlw   0x0F
                      00434 ;    movwf   delay
                      00435 ;comp_loop
                      00436 ;    decfsz  delay,F
                      00437 ;    goto    comp_loop
                      00438 
00B7   0020           00439     banksel PORTC
00B8   170E           00440     bsf     PORTC,RC6
00B9   130E           00441     bcf     PORTC,RC6
                      00442 
00BA   2???           00443     call    pwm_sync
                      00444 
                      00445     ;  Return to the caller.
00BB   0008           00446     return
                      00447 
                      00448 ;  Comparator Module : END
                      00449 ;
                      00450 ; ------------------------------------------------------------------------------
                      00451 
                      00452 
                      00453 ; ------------------------------------------------------------------------------
                      00454 ;
                      00455 ;  UART Module
                      00456 ;
                      00457 ;  This module handles the reception of the DMX data.  It is state machine
                      00458 ;  driven.  Data for the specified channels is saved in the RAM.
                      00459 
                      00460 ;  Define variables for the timer 1 module.
                      00461         cblock
  00000021            00462         uart_state      ;  State of the uart state machine.
  00000022            00463         uart_count_low  ;  Tracks number of bytes read.
  00000023            00464         uart_count_high
  00000024            00465         uart_data       ;  Stores current channel data.
  00000025            00466         dmx0
  00000026            00467         dmx1
  00000027            00468         dmx2
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000028            00469         dmx3
                      00470         endc
                      00471 
                      00472 ;  Define uart states.
  00000000            00473 UART_STATE_BREAK    equ     000H        ;  Looking for the gap between packets.
  00000001            00474 UART_STATE_START    equ     001H        ;  Looking for the start character.
  00000002            00475 UART_STATE_DATA     equ     002H        ;  Reading the DMX channel data.
                      00476 
                      00477 ;  Routine - uart_init : This sets up the UART to receive data from the DMX
                      00478 ;  controller.
                      00479 
00BC                  00480 uart_init
                      00481 
                      00482     ;  Setup the baud rate generator to 250K baud, the standard for DMX.
00BC   0023           00483     banksel BAUDCON
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BD   109F           00484     bcf     BAUDCON,WUE     ; Wake up disabled.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BE   101F           00485     bcf     BAUDCON,ABDEN   ; Disable autobaud.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BF   119F           00486     bcf     BAUDCON,BRG16   ;  See formula in documentation.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C0   151E           00487     bsf     TXSTA,BRGH
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C1   019C           00488     clrf    SPBRGH
00C2   3004           00489     movlw   0x04
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C3   009B           00490     movwf   SPBRGL
                      00491 
                      00492     ;  Set receiver.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C4   131D           00493     bcf     RCSTA,RX9
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C5   161D           00494     bsf     RCSTA,CREN      ; Enable reception.
                      00495 
                      00496     ;  Turn on the serial port.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C6   179D           00497     bsf     RCSTA,SPEN      ; Enables the serial ports.
                      00498 
                      00499     ;  Set the state to look for the start of a packet.
00C7   0020           00500     banksel uart_state
00C8   3000           00501     movlw   UART_STATE_BREAK
00C9   00A1           00502     movwf   uart_state
                      00503 
                      00504     ;  Setup a debug pin for watching the state machine.
00CA   0021           00505     banksel TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00CB   120E           00506     bcf     TRISC,TRISC4
00CC   0020           00507     banksel PORTC
00CD   120E           00508     bcf     PORTC,RC4
                      00509 
                      00510     ;  Enable UART interrupts.
00CE   0021           00511     banksel PIE1
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00512 ;    bsf     PIE1,RCIE
                      00513 
                      00514     ;  Return to the caller.
00CF   0008           00515     return;
                      00516 
                      00517 ;  Routine - uart_isr : Handles an interrupt from the uart.
                      00518 
00D0                  00519 uart_isr
                      00520 
                      00521     ;  See if the uart is interrupting.
00D0   0020           00522     banksel PIR1
00D1   1E91           00523     btfss   PIR1,RCIF
00D2   2???           00524     goto    uart_isr_return
                      00525 
                      00526     ;  Check for break state and handle.
00D3   0020           00527     banksel uart_state
00D4   0821           00528     movfw   uart_state
00D5   3A00           00529     xorlw   UART_STATE_BREAK
00D6   1D03           00530     btfss   STATUS,Z
00D7   2???           00531     goto    uart_state_check_start
                      00532 
                      00533     ;  STATE_BREAK : This state is looking for a first framing error.  This
                      00534     ;  is a possible indication of the break signal at the start of each
                      00535     ;  packet.
                      00536 
00D8                  00537 uart_state_break
                      00538 
                      00539     ;  Get the status register and see if there is a framing error.
00D8   0023           00540     banksel RCSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D9   1D1D           00541     btfss   RCSTA,FERR
00DA   2???           00542     goto    uart_state_break_discard
                      00543 
                      00544     ;  We have a framing error so next state is start where we look for
                      00545     ;  a start code.
00DB   0020           00546     banksel uart_state
00DC   3001           00547     movlw   UART_STATE_START
00DD   00A1           00548     movwf   uart_state
                      00549 
                      00550     ;  Indicate that we have a framing error.
00DE   0020           00551     banksel PORTC
00DF   160E           00552     bsf     PORTC,4
00E0   120E           00553     bcf     PORTC,4
00E1   2???           00554     goto    uart_isr_return
                      00555 
                      00556     ;  If we received a good data byte, we need to discard it.  We do this
                      00557     ;  until we get a framing error.
00E2                  00558 uart_state_break_discard
                      00559 
                      00560     ;  Read the data byte and exit.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E2   0819           00561     movfw   RCREG
00E3   2???           00562     goto    uart_isr_return
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00563 
                      00564     ;  Check for the start state.
00E4                  00565 uart_state_check_start
00E4   0020           00566     banksel uart_state
00E5   0821           00567     movfw   uart_state
00E6   3A01           00568     xorlw   UART_STATE_START
00E7   1D03           00569     btfss   STATUS,Z
00E8   2???           00570     goto    uart_state_check_data
                      00571 
                      00572     ;  STATE_START : This is the state that looks for the start byte.
                      00573     ;  Discard any framing errors.  When a byte is received without an error,
                      00574     ;  it must be a "00H" and if not, we go back to looking for framing errors.
                      00575 
00E9                  00576 uart_state_start
                      00577 
                      00578     ;  Check the status of the receiver.  If we have framing error, return.
00E9   0023           00579     banksel RCREG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EA   1D1D           00580     btfss   RCSTA,FERR
00EB   2???           00581     goto    uart_state_start_data
                      00582 
                      00583     ;  We have a framing error.  Read the data and return from the isr.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EC   0819           00584     movfw   RCREG
00ED   2???           00585     goto    uart_isr_return
                      00586 
                      00587     ;  We must have a good data byte so see if it is the 00H start byte.
00EE                  00588 uart_state_start_data
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EE   0819           00589     movfw   RCREG
00EF   1903           00590     btfsc   STATUS,Z
00F0   2???           00591     goto    uart_state_start_detected
                      00592 
                      00593     ;  We did not find the start byte so reset to the break state.
00F1   0020           00594     banksel uart_state
00F2   3000           00595     movlw   UART_STATE_BREAK
00F3   00A1           00596     movwf   uart_state
00F4   2???           00597     goto    uart_isr_return
                      00598 
                      00599     ;  We found the start byte.  Now it's time to read all 512 bytes of data.
00F5                  00600 uart_state_start_detected
                      00601 
00F5   0020           00602     banksel uart_state
00F6   01A2           00603     clrf    uart_count_low
00F7   01A3           00604     clrf    uart_count_high
                      00605 
00F8   3002           00606     movlw   UART_STATE_DATA
00F9   00A1           00607     movwf   uart_state
                      00608 
                      00609     ;  Indicate that we have found the start code.
00FA   0020           00610     banksel PORTC
00FB   160E           00611     bsf     PORTC,4
00FC   120E           00612     bcf     PORTC,4
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00FD   160E           00613     bsf     PORTC,4
00FE   120E           00614     bcf     PORTC,4
                      00615 
00FF   2???           00616     goto    uart_isr_return
                      00617 
                      00618     ;  Looking for a start character, skipping framing errors.  If first
                      00619     ;  data received without error is not 00H, then go back to state break.
0100                  00620 uart_state_check_data
0100   0020           00621     banksel uart_state
0101   0821           00622     movfw   uart_state
0102   3A02           00623     xorlw   UART_STATE_DATA
0103   1D03           00624     btfss   STATUS,Z
0104   2???           00625     goto    uart_state_error
                      00626 
                      00627     ;  STATE_DATA : This state reads 512 bytes of data and then starts looking
                      00628     ;  for the next DMX packet.
0105                  00629 uart_state_data
                      00630 
                      00631     ;  Check for a framing error.  If we have one, reset to the break state.
0105   0023           00632     banksel RCSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0106   191D           00633     btfsc   RCSTA,FERR
0107   2???           00634     goto    uart_state_data_frame
                      00635 
                      00636     ;  We have a byte of data so read it and see if there is any more to read.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0108   0819           00637     movfw   RCREG
0109   0020           00638     banksel uart_data
                      00639 ;    bcf     STATUS,C
010A   00A4           00640     movwf   uart_data
                      00641 ;    rrf     uart_data
                      00642 ;    rrf     uart_data
                      00643 
                      00644     ;  See if we have a channel of data.
010B   0020           00645     banksel uart_data
010C   0822           00646     movfw   uart_count_low
010D   0670           00647     xorwf   dmx_0_low,W
010E   1D03           00648     btfss   STATUS,Z
010F   2???           00649     goto    uart_state_data_dmx1
                      00650 
0110   0823           00651     movfw   uart_count_high
0111   0671           00652     xorwf   dmx_0_high,W
0112   1D03           00653     btfss   STATUS,Z
0113   2???           00654     goto    uart_state_data_dmx1
                      00655 
                      00656     ;  Move the data to the dmx0 slot.
0114   0824           00657     movfw   uart_data
                      00658 ;    iorlw   0C0H
0115   00A5           00659     movwf   dmx0
Message[305]: Using default destination of 1 (file).
0116   09A5           00660     comf    dmx0
                      00661 
0117                  00662 uart_state_data_dmx1
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00663 
                      00664     ;  See if we have channel 1 data.
0117   0822           00665     movfw   uart_count_low
0118   0672           00666     xorwf   dmx_1_low,W
0119   1D03           00667     btfss   STATUS,Z
011A   2???           00668     goto    uart_state_data_dmx2
                      00669 
011B   0823           00670     movfw   uart_count_high
011C   0673           00671     xorwf   dmx_1_high,W
011D   1D03           00672     btfss   STATUS,Z
011E   2???           00673     goto    uart_state_data_dmx2
                      00674 
                      00675     ;  Move the data to the dmx0 slot.
011F   0824           00676     movfw   uart_data
                      00677 ;    iorlw   0C0H
0120   00A6           00678     movwf   dmx1
Message[305]: Using default destination of 1 (file).
0121   09A6           00679     comf    dmx1
                      00680 
0122                  00681 uart_state_data_dmx2
                      00682 
                      00683     ;  See if we have channel2 data.
0122   0822           00684     movfw   uart_count_low
0123   0674           00685     xorwf   dmx_2_low,W
0124   1D03           00686     btfss   STATUS,Z
0125   2???           00687     goto    uart_state_data_dmx3
                      00688 
0126   0823           00689     movfw   uart_count_high
0127   0675           00690     xorwf   dmx_2_high,W
0128   1D03           00691     btfss   STATUS,Z
0129   2???           00692     goto    uart_state_data_dmx3
                      00693 
                      00694     ;  Move the data to the dmx0 slot.
012A   0824           00695     movfw   uart_data
                      00696 ;    iorlw   0C0H
012B   00A7           00697     movwf   dmx2
Message[305]: Using default destination of 1 (file).
012C   09A7           00698     comf    dmx2
                      00699 
012D                  00700 uart_state_data_dmx3
                      00701 
                      00702     ;  See if we have channel 3 data.
012D   0822           00703     movfw   uart_count_low
012E   0676           00704     xorwf   dmx_3_low,W
012F   1D03           00705     btfss   STATUS,Z
0130   2???           00706     goto    uart_state_data_inc
                      00707 
0131   0823           00708     movfw   uart_count_high
0132   0677           00709     xorwf   dmx_3_high,W
0133   1D03           00710     btfss   STATUS,Z
0134   2???           00711     goto    uart_state_data_inc
                      00712 
                      00713     ;  Move the data to the dmx0 slot.
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0135   0824           00714     movfw   uart_data
                      00715 ;    iorlw   0C0H
0136   00A8           00716     movwf   dmx3
Message[305]: Using default destination of 1 (file).
0137   09A8           00717     comf    dmx3
                      00718 
                      00719 
0138                  00720 uart_state_data_inc
                      00721 
0138   0020           00722     banksel uart_state
Message[305]: Using default destination of 1 (file).
0139   0FA2           00723     incfsz  uart_count_low
013A   2???           00724     goto    uart_state_data_noinc
Message[305]: Using default destination of 1 (file).
013B   0AA3           00725     incf    uart_count_high
                      00726 
013C                  00727 uart_state_data_noinc
                      00728 
013C   0823           00729     movfw   uart_count_high
013D   3A02           00730     xorlw   002H
013E   1D03           00731     btfss   STATUS,Z
013F   2???           00732     goto    uart_isr_return
                      00733 
                      00734     ;  We have read 512 bytes.
0140   3000           00735     movlw   UART_STATE_BREAK
0141   00A1           00736     movwf   uart_state
                      00737 
                      00738     ;  Indicate that we have found all 512 channels of data.
0142   0020           00739     banksel PORTC
0143   160E           00740     bsf     PORTC,4
0144   120E           00741     bcf     PORTC,4
0145   160E           00742     bsf     PORTC,4
0146   120E           00743     bcf     PORTC,4
0147   160E           00744     bsf     PORTC,4
0148   120E           00745     bcf     PORTC,4
                      00746 
                      00747     ;  Clear the watchdog timer.  If we don't get a packet, we reset.
0149   0064           00748     clrwdt
                      00749 
014A   2???           00750     goto    uart_isr_return
                      00751 
                      00752     ;  A framing error was detected.  Reset the state machine.
014B                  00753 uart_state_data_frame
014B   0020           00754     banksel uart_state
014C   3000           00755     movlw   UART_STATE_BREAK
014D   00A1           00756     movwf   uart_state
014E   2???           00757     goto    uart_isr_return
                      00758 
                      00759     ;  A state error was detected.  Not good.
014F                  00760 uart_state_error
014F   0020           00761     banksel PORTC
0150   160E           00762     bsf     PORTC,4
0151   120E           00763     bcf     PORTC,4
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0152   2???           00764     goto    uart_state_error
                      00765 
0153                  00766 uart_isr_return
                      00767     ;  Return to the caller.
0153   0008           00768     return
                      00769 
                      00770 ;  Routine - uart_isr_set_data_state : This is a routine that determines the
                      00771 ;  next data state based on whether we should be grabbing channel data or not.
                      00772 ;  It just
                      00773 
                      00774 
                      00775 ;  UART Module : END
                      00776 ;
                      00777 ; ------------------------------------------------------------------------------
                      00778 
                      00779 
                      00780 ; ------------------------------------------------------------------------------
                      00781 ;
                      00782 ;  Timer 1 Module
                      00783 ;
                      00784 ;  This module handles the timing for the pwm of the channels.  It's resolution
                      00785 ;  is set for 64 levels based on a 1/120 second period.  The timer will count
                      00786 ;  until reset by the zero crossing detection.
                      00787 
                      00788 ;  Define variables for the timer 1 module.
                      00789         cblock
  00000029            00790         level               ;  Holds the current level 0 to 63.
                      00791 ;               mstimerh        ;  High byte of millisceond timer.
                      00792 ;        mstimertick ;  Bit 0 set if ms tick code should run.
                      00793         endc
                      00794 
                      00795 ;  The reload value is 65536-2604 = 0F5D4H.  This will cause an interrupt on
                      00796 ;  overflow every 1/120/64 seconds ... 130.2uS.  Based on 20Mhz oscillator.
  000000EF            00797 timer_reload_low        equ             0efH        ; 0F4 for 64 levels
  000000FD            00798 timer_reload_high       equ             0fDH        ; 0F5 for 64 levels
                      00799 
                      00800 ;  Routine - timer_init : Set up the timer to give us an interrupt every 1ms.
                      00801 ;  The isr code for this must be VERY lightweight.
                      00802 
0154                  00803 timer_init
                      00804 
0154   0020           00805     banksel T1CON
0155   1718           00806     bsf     T1CON,TMR1CS0    ; Select internal clock.  System Clock.
0156   1398           00807     bcf     T1CON,TMR1CS1
0157   1518           00808     bsf     T1CON,NOT_T1SYNC  ; Not required for internal clock.
0158   1218           00809     bcf     T1CON,T1CKPS0   ; Prescaler 1:1
0159   1298           00810     bcf     T1CON,T1CKPS1
                      00811 
015A   0020           00812     banksel T1GCON
015B   1399           00813     bcf     T1GCON,TMR1GE
                      00814 
015C   01A9           00815         clrf    level
                      00816 ;       clrf    mstimerh
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00817 
015D   30FD           00818     movlw   timer_reload_high
015E   0097           00819     movwf   TMR1H
015F   30EF           00820     movlw   timer_reload_low
0160   0096           00821     movwf   TMR1L
                      00822 
0161   1011           00823         bcf             PIR1,TMR1IF                             ;  Clear any pending interrupt.
0162   0021           00824         banksel PIE1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0163   1411           00825         bsf             PIE1,TMR1IE                             ;  Enable the interrupts
0164   0020           00826         banksel T1CON
0165   1418           00827         bsf             T1CON,TMR1ON                    ;  Start the timer.
                      00828 
                      00829     ;  Setup the debug port, PORTC, pin 7.
0166   0021           00830     banksel TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0167   138E           00831     bcf     TRISC,TRISC7
0168   0020           00832     banksel PORTC
0169   138E           00833     bcf     PORTC,RC7
                      00834 
016A   0008           00835         return
                      00836 
                      00837 
                      00838 ;  Routine - timer_isr : This is called from the interrupt routine if a timer1
                      00839 ;  interrupt is detected.
                      00840 
016B                  00841 timer_isr
                      00842 
                      00843         ;  Check for a timer interrupt.
016B   0020           00844         banksel PIR1
016C   1C11           00845         btfss   PIR1,TMR1IF                             ;  Check for timer 1 interrupt.
016D   2???           00846         goto    timer_isr_return                ;  If not, return.
                      00847 
016E   0020           00848     banksel T1CON
016F   1018           00849         bcf             T1CON,TMR1ON                    ;  Turn off the timer.
                      00850 
                      00851     ; Reload the timer for the next cycle.
0170   0020           00852     banksel TMR1L
0171   30EF           00853         movlw   timer_reload_low                ;  Get low timer value.
0172   0096           00854         movwf   TMR1L                                   ;  Set low byte.
0173   30FD           00855         movlw   timer_reload_high               ;  Get high timer value.
0174   0097           00856         movwf   TMR1H                                   ;  Set high byte.
                      00857 
0175   0020           00858     banksel PIR1
0176   1011           00859         bcf             PIR1,TMR1IF                             ;  Clear any pending interrupt.
0177   0020           00860     banksel T1CON
0178   1418           00861         bsf             T1CON,TMR1ON                    ;  Turn timer back on.
                      00862 
                      00863     ; pulse the timer debug pin.
0179   0020           00864     banksel PORTC
017A   178E           00865     bsf     PORTC,RC7
017B   138E           00866     bcf     PORTC,RC7
                      00867 
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00868     ; Turn off all the triac drivers.
017C   2???           00869     call    pwm_off
                      00870 
                      00871     ; Increment the level in the cycle.  If we hit 255, then hold the
                      00872     ; counter there and disable setting any drivers.
017D   0020           00873     banksel level
Message[305]: Using default destination of 1 (file).
017E   0AA9           00874     incf    level
017F   1D03           00875     btfss   STATUS,Z
0180   2???           00876     goto    timer_isr_setpwm
                      00877 
Message[305]: Using default destination of 1 (file).
0181   03A9           00878     decf    level
0182   2???           00879     goto    timer_isr_return
                      00880 
                      00881     ; Set the triac drivers for the new level.
0183                  00882 timer_isr_setpwm
0183   2???           00883     call    pwm_set_channels                ;  Set the channel outputs
                      00884 
0184                  00885 timer_isr_return
0184   0008           00886         return
                      00887 
                      00888 ;  Routine - timer_zero : This resets the timer so that it's synchronized
                      00889 ;  with the AC line.
0185                  00890 timer_zero
0185   0020           00891     banksel T1CON
0186   1018           00892     bcf         T1CON,TMR1ON                    ;  Turn off the timer.
                      00893 
0187   30EF           00894         movlw   timer_reload_low                ;  Get low timer value.
0188   0096           00895         movwf   TMR1L                                   ;  Set low byte.
0189   30FD           00896         movlw   timer_reload_high               ;  Get high timer value.
018A   0097           00897         movwf   TMR1H                                   ;  Set high byte.
                      00898 
018B   0020           00899     banksel PIR1
018C   1011           00900         bcf             PIR1,TMR1IF                             ;  Clear any pending interrupt.
018D   0020           00901     banksel T1CON
018E   1418           00902         bsf             T1CON,TMR1ON                    ;  Turn timer back on.
                      00903 
018F   0020           00904     banksel level                   ;  Reset the level back to 0.
0190   01A9           00905     clrf    level
                      00906 
0191   0008           00907     return
                      00908 
                      00909 ;  Timer Module : END
                      00910 ;
                      00911 ; ------------------------------------------------------------------------------
                      00912 
                      00913 
                      00914 ;  Routine - pwm_init : This initializes the pulse width modulation module.
                      00915 
0192                  00916 pwm_init
                      00917 
                      00918     ;  Set the PWM bits to be outputs.
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0192   0021           00919     banksel TRISA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0193   128E           00920     bcf     TRISC,TRISC5
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0194   118E           00921     bcf     TRISC,TRISC3
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0195   110C           00922     bcf     TRISA,TRISA2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0196   108E           00923     bcf     TRISC,TRISC1
                      00924 
                      00925     ;  Set all the outputs to zero.
0197   2???           00926     call    pwm_off
                      00927 
                      00928     ;  Return to the caller.
0198   0008           00929     return
                      00930 
                      00931 ;  Routine - pwm_clear : Turns off all 4 channels.
0199                  00932 pwm_off
                      00933 
                      00934     ;  Set all the outputs to zero.
0199   0022           00935     banksel LATC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
019A   128E           00936     bcf     LATC,RC5
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
019B   118E           00937     bcf     LATC,RC3
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
019C   110C           00938     bcf     LATA,RA2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
019D   108E           00939     bcf     LATC,RC1
                      00940 
                      00941     ;  return to the caller.
019E   0008           00942     return
                      00943 
                      00944 ;  Routine - pwm_ac_sync : This should be called on each zero crossing.
019F                  00945 pwm_sync
                      00946 
019F   2???           00947     call    timer_zero      ;  Make sure the timer gets zeroed.
01A0   2???           00948     call    pwm_off         ;  Turn off all channels.
01A1   2???           00949     call    pwm_set_channels    ;  Set channels since level has changed.
01A2   0008           00950     return                  ;  Return to the caller.
                      00951 
                      00952 ;  Routine - pwm_set_channels : This sets the channel bits based on the
                      00953 ;  current level.
                      00954 
01A3                  00955 pwm_set_channels
                      00956 
01A3   0020           00957     banksel dmx0
                      00958 
                      00959 ;    movfw   level
                      00960 ;    sublw   0x30
                      00961 ;    btfsc   STATUS,C
                      00962 ;    return
                      00963 ;
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00964 ;    movfw   level
                      00965 ;    sublw   0x0f
                      00966 ;    btfss   STATUS,C
                      00967 ;    return
                      00968 
                      00969 ;    bcf     PORTC,RC5
                      00970 ;    movfw   level
                      00971 ;    xorlw   0x20
                      00972 ;    btfss   STATUS,Z
                      00973 ;    return
                      00974 
                      00975 ;  If the level is 255, don't bother turning on the triac.  This will allow
                      00976 ;  for an always off condition
                      00977 
01A4   0F29           00978     incfsz  level,W
01A5   2???           00979     goto    pwm_set_channels_ok
01A6   0008           00980     return
                      00981 
01A7                  00982 pwm_set_channels_ok
01A7   0825           00983     movfw   dmx0        ; Get current dmx set level.
01A8   1D03           00984     btfss   STATUS,Z    ; If it's 0, then we are full on so always set the trigger.
01A9   0629           00985     xorwf   level,W     ; If not 0, check to see if we are at the expected level.
01AA   1903           00986     btfsc   STATUS,Z    ; If at level or at 0, then...
01AB   168E           00987     bsf     PORTC,RC5   ;    set the trigger.
                      00988 
01AC   0826           00989     movfw   dmx1
01AD   1D03           00990     btfss   STATUS,Z
01AE   0629           00991     xorwf   level,W
01AF   1903           00992     btfsc   STATUS,Z
01B0   158E           00993     bsf     PORTC,RC3
                      00994 
01B1   0827           00995     movfw   dmx2
01B2   1D03           00996     btfss   STATUS,Z
01B3   0629           00997     xorwf   level,W
01B4   1903           00998     btfsc   STATUS,Z
01B5   150C           00999     bsf     PORTA,RA2
                      01000 
01B6   0828           01001     movfw   dmx3
01B7   1D03           01002     btfss   STATUS,Z
01B8   0629           01003     xorwf   level,W
01B9   1903           01004     btfsc   STATUS,Z
01BA   148E           01005     bsf     PORTC,RC1
                      01006 
01BB   0008           01007     return
                      01008 
                      01009 
                      01010 
                      01011 ; ------------------------------------------------------------------------------
                      01012 ;
                      01013 ;  Start up the main program.  Call the initialization routines for each of the
                      01014 ;  modules.
                      01015 
01BC                  01016 boot
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01017 
                      01018     ;  Initialize the system components.
01BC   2???           01019     call    system_init
01BD   2???           01020     call    dmx_init
01BE   2???           01021     call    timer_init
01BF   2???           01022     call    uart_init
01C0   2???           01023     call    comparator_init
01C1   2???           01024     call    pwm_init
                      01025 
                      01026     ;  Start the system.
01C2   2???           01027     call    system_start
                      01028 
                      01029     ;  For testing set up dmx channels.
01C3   30C0           01030     movlw   0xc0
01C4   00A5           01031     movwf   dmx0
01C5   3080           01032     movlw   0x80
01C6   00A6           01033     movwf   dmx1
01C7   3040           01034     movlw   0x40
01C8   00A7           01035     movwf   dmx2
01C9   3000           01036     movlw   0x00
01CA   00A8           01037     movwf   dmx3
                      01038 
                      01039 
                      01040     ;  Start of user code.
01CB                  01041 main
                      01042 
01CB   2???           01043     call    uart_isr
01CC   2???           01044     goto    main
01CD                  01045 main2
01CD   2???           01046     goto    main2
01CE   0021           01047     banksel TRISC
                      01048  ;   bcf     TRISC,4
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01CF   128E           01049     bcf     TRISC,5
                      01050 
                      01051 
                      01052 
01D0                  01053 mainlp
01D0   0020           01054     banksel PORTC
01D1   160E           01055     bsf     PORTC,4
01D2   0000           01056     nop
01D3   0000           01057     nop
01D4   120E           01058     bcf     PORTC,4
                      01059 ;    bcf     PORTC,5
                      01060 
                      01061 ;    ;  Setup the serial port.
                      01062 ;    banksel BAUDCON
                      01063 ;    bcf     BAUDCON,SCKP    ;  Non inverting tx for async.
                      01064 ;    bcf     BAUDCON,WUE     ; Wake up disabled.
                      01065 ;    bcf     BAUDCON,ABDEN   ; Disable autobaud.
                      01066 
                      01067     ;  Setup for transmission.
01D5   0023           01068     banksel BAUDCON
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01D6   139E           01069     bcf     TXSTA,CSRC      ; Clock Source Select : Don't care for async.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01D7   131E           01070     bcf     TXSTA,TX9       ; Selects 8-bit transmissions.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01D8   121E           01071     bcf     TXSTA,SYNC      ; Selects Asynchronous mode.
                      01072 
                      01073 
                      01074     ;  Setup the Baud Rate Generator for 250K baud.
01D9   0023           01075     banksel BAUDCON
                      01076 ;    bcf     BAUDCON,BRG16
                      01077 ;    bsf     TXSTA,BRGH
                      01078 ;    clrf    SPBRGH
                      01079 ;    movlw   0x04
                      01080 ;    movwf   SPBRGL
                      01081 
                      01082 ;    bsf     RCSTA,SPEN      ; Enables the serial ports.
                      01083 
                      01084     ;  Get ready to send data.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01DA   169E           01085     bsf     TXSTA,TXEN      ;  Enable transmission.
                      01086 
                      01087 ;    ;  Set receiver.
                      01088 ;    bcf     RCSTA,RX9
                      01089 ;    bsf     RCSTA,CREN      ; Enable reception.
                      01090 
01DB                  01091 txloop
                      01092 
                      01093     ;  See if we are ready to send data.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01DB   1C9E           01094     btfss   TXSTA,TRMT
01DC   2???           01095     goto    txloop
                      01096 
                      01097     ;  Write data to the tx reg.
01DD   3055           01098     movlw   0x55
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01DE   009A           01099     movwf   TXREG
                      01100 
01DF   2???           01101     goto    txloop
                      01102 
                      01103 ; End of main program.
                      01104 ;
                      01105 ; ------------------------------------------------------------------------------
                      01106 
00FA 0803             01107         end
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACKTIM                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
AHEN                              00000001
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSB4                             00000004
ANSB5                             00000005
ANSC0                             00000000
ANSC1                             00000001
ANSC2                             00000002
ANSC3                             00000003
ANSC6                             00000006
ANSC7                             00000007
ANSELA                            0000018C
ANSELB                            0000018D
ANSELC                            0000018E
APFCON                            0000011D
BAUDCON                           0000019F
BCL1IE                            00000003
BCL1IF                            00000003
BF                                00000000
BKA0                              00000000
BKA1                              00000001
BKA10                             00000002
BKA11                             00000003
BKA12                             00000004
BKA13                             00000005
BKA14                             00000006
BKA2                              00000002
BKA3                              00000003
BKA4                              00000004
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

BKA5                              00000005
BKA6                              00000006
BKA7                              00000007
BKA8                              00000000
BKA9                              00000001
BKEN                              00000007
BKHLT                             00000000
BOEN                              00000004
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSRICDSHAD                        00000FE3
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
C2HYS                             00000001
C2IE                              00000006
C2IF                              00000006
C2INTN                            00000006
C2INTP                            00000007
C2NCH0                            00000000
C2NCH1                            00000001
C2NCH2                            00000002
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2PCH0                            00000004
C2PCH1                            00000005
C2POL                             00000004
C2SP                              00000002
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

C2SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHANNEL_ADDRESS_0                 00000018
CHANNEL_ADDRESS_1                 00000019
CHANNEL_ADDRESS_2                 0000001A
CHANNEL_ADDRESS_3                 0000001B
CHANNEL_ADD_0_HIGH                00000021
CHANNEL_ADD_0_LOW                 00000020
CHANNEL_ADD_1_HIGH                00000023
CHANNEL_ADD_1_LOW                 00000022
CHANNEL_ADD_2_HIGH                00000025
CHANNEL_ADD_2_LOW                 00000024
CHANNEL_ADD_3_HIGH                00000027
CHANNEL_ADD_3_LOW                 00000026
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CKE                               00000006
CKP                               00000004
CLC1CON                           00000F10
CLC1GLS0                          00000F14
CLC1GLS1                          00000F15
CLC1GLS2                          00000F16
CLC1GLS3                          00000F17
CLC1IE                            00000000
CLC1IF                            00000000
CLC1POL                           00000F11
CLC1SEL                           00000001
CLC1SEL0                          00000F12
CLC1SEL1                          00000F13
CLC2CON                           00000F18
CLC2GLS0                          00000F1C
CLC2GLS1                          00000F1D
CLC2GLS2                          00000F1E
CLC2GLS3                          00000F1F
CLC2IE                            00000001
CLC2IF                            00000001
CLC2POL                           00000F19
CLC2SEL0                          00000F1A
CLC2SEL1                          00000F1B
CLC3CON                           00000F20
CLC3GLS0                          00000F24
CLC3GLS1                          00000F25
CLC3GLS2                          00000F26
CLC3GLS3                          00000F27
CLC3IE                            00000002
CLC3IF                            00000002
CLC3POL                           00000F21
CLC3SEL0                          00000F22
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

CLC3SEL1                          00000F23
CLC4CON                           00000F28
CLC4GLS0                          00000F2C
CLC4GLS1                          00000F2D
CLC4GLS2                          00000F2E
CLC4GLS3                          00000F2F
CLC4IE                            00000003
CLC4IF                            00000003
CLC4POL                           00000F29
CLC4SEL0                          00000F2A
CLC4SEL1                          00000F2B
CLCDATA                           00000F0F
CM1CON0                           00000111
CM1CON1                           00000112
CM2CON0                           00000113
CM2CON1                           00000114
CMOUT                             00000115
CREN                              00000004
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
C_SHAD                            00000000
D1N                               00000000
D1S0                              00000000
D1S1                              00000001
D1S2                              00000002
D1T                               00000001
D2N                               00000002
D2S0                              00000004
D2S1                              00000005
D2S2                              00000006
D2T                               00000003
D3N                               00000004
D3S0                              00000000
D3S1                              00000001
D3S2                              00000002
D3T                               00000005
D4N                               00000006
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

D4S0                              00000004
D4S1                              00000005
D4S2                              00000006
D4T                               00000007
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACOE1                            00000005
DACOE2                            00000004
DACPSS                            00000002
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DBGIN0                            00000000
DBGIN1                            00000001
DBGIN10                           00000002
DBGIN11                           00000003
DBGIN12                           00000004
DBGIN13                           00000005
DBGIN2                            00000002
DBGIN3                            00000003
DBGIN4                            00000004
DBGIN5                            00000005
DBGIN6                            00000006
DBGIN7                            00000007
DBGIN8                            00000000
DBGIN9                            00000001
DBGINEX                           00000003
DC                                00000001
DC_SHAD                           00000001
DEVICE_TYPE_DMX_DEVICE            00000002
DEVICE_VERSION_MAJOR              00000001
DEVICE_VERSION_MINOR              00000000
DEVSEL                            00000F95
DEVSEL0                           00000000
DEVSEL1                           00000001
DEVSEL2                           00000002
DHEN                              00000000
D_NOT_A                           00000005
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FREE                              00000004
FREEZ                             00000006
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR1                              00000006
FSR1H                             00000007
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSC2                          00000003
G1ASDSCLC2                        00000000
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POL                             00000000
G1POLA                            00000003
G1POLB                            00000004
G2POL                             00000001
G3POL                             00000002
G4D1N                             00000000
G4D1T                             00000001
G4D2N                             00000002
G4D2T                             00000003
G4D3N                             00000004
G4D3T                             00000005
G4D4N                             00000006
G4D4T                             00000007
G4POL                             00000003
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFR                            00000004
HFIOFS                            00000000
ICDBK0CON                         00000F9C
ICDBK0H                           00000F9E
ICDBK0L                           00000F9D
ICDCON0                           00000F8D
ICDINSTH                          00000F97
ICDINSTL                          00000F96
ICDIO                             00000F8C
ICDSTAT                           00000F91
INBUG                             00000007
INDF0                             00000000
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

INDF1                             00000001
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCBF                             00000396
IOCBF4                            00000004
IOCBF5                            00000005
IOCBF6                            00000006
IOCBF7                            00000007
IOCBN                             00000395
IOCBN4                            00000004
IOCBN5                            00000005
IOCBN6                            00000006
IOCBN7                            00000007
IOCBP                             00000394
IOCBP4                            00000004
IOCBP5                            00000005
IOCBP6                            00000006
IOCBP7                            00000007
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

LATB                              0000010D
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              0000010E
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LAT_ICDCLK                        00000004
LAT_ICDDAT                        00000005
LC1D1S0                           00000000
LC1D1S1                           00000001
LC1D1S2                           00000002
LC1D2S0                           00000004
LC1D2S1                           00000005
LC1D2S2                           00000006
LC1D3S0                           00000000
LC1D3S1                           00000001
LC1D3S2                           00000002
LC1D4S0                           00000004
LC1D4S1                           00000005
LC1D4S2                           00000006
LC1EN                             00000007
LC1G1D1N                          00000000
LC1G1D1T                          00000001
LC1G1D2N                          00000002
LC1G1D2T                          00000003
LC1G1D3N                          00000004
LC1G1D3T                          00000005
LC1G1D4N                          00000006
LC1G1D4T                          00000007
LC1G1POL                          00000000
LC1G2D1N                          00000000
LC1G2D1T                          00000001
LC1G2D2N                          00000002
LC1G2D2T                          00000003
LC1G2D3N                          00000004
LC1G2D3T                          00000005
LC1G2D4N                          00000006
LC1G2D4T                          00000007
LC1G2POL                          00000001
LC1G3D1N                          00000000
LC1G3D1T                          00000001
LC1G3D2N                          00000002
LC1G3D2T                          00000003
LC1G3D3N                          00000004
LC1G3D3T                          00000005
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

LC1G3D4N                          00000006
LC1G3D4T                          00000007
LC1G3POL                          00000002
LC1G4D1N                          00000000
LC1G4D1T                          00000001
LC1G4D2N                          00000002
LC1G4D2T                          00000003
LC1G4D3N                          00000004
LC1G4D3T                          00000005
LC1G4D4N                          00000006
LC1G4D4T                          00000007
LC1G4POL                          00000003
LC1INTN                           00000003
LC1INTP                           00000004
LC1MODE0                          00000000
LC1MODE1                          00000001
LC1MODE2                          00000002
LC1OE                             00000006
LC1OUT                            00000005
LC1POL                            00000007
LC2D1S0                           00000000
LC2D1S1                           00000001
LC2D1S2                           00000002
LC2D2S0                           00000004
LC2D2S1                           00000005
LC2D2S2                           00000006
LC2D3S0                           00000000
LC2D3S1                           00000001
LC2D3S2                           00000002
LC2D4S0                           00000004
LC2D4S1                           00000005
LC2D4S2                           00000006
LC2EN                             00000007
LC2G1D1N                          00000000
LC2G1D1T                          00000001
LC2G1D2N                          00000002
LC2G1D2T                          00000003
LC2G1D3N                          00000004
LC2G1D3T                          00000005
LC2G1D4N                          00000006
LC2G1D4T                          00000007
LC2G1POL                          00000000
LC2G2D1N                          00000000
LC2G2D1T                          00000001
LC2G2D2N                          00000002
LC2G2D2T                          00000003
LC2G2D3N                          00000004
LC2G2D3T                          00000005
LC2G2D4N                          00000006
LC2G2D4T                          00000007
LC2G2POL                          00000001
LC2G3D1N                          00000000
LC2G3D1T                          00000001
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

LC2G3D2N                          00000002
LC2G3D2T                          00000003
LC2G3D3N                          00000004
LC2G3D3T                          00000005
LC2G3D4N                          00000006
LC2G3D4T                          00000007
LC2G3POL                          00000002
LC2G4D1N                          00000000
LC2G4D1T                          00000001
LC2G4D2N                          00000002
LC2G4D2T                          00000003
LC2G4D3N                          00000004
LC2G4D3T                          00000005
LC2G4D4N                          00000006
LC2G4D4T                          00000007
LC2G4POL                          00000003
LC2INTN                           00000003
LC2INTP                           00000004
LC2MODE0                          00000000
LC2MODE1                          00000001
LC2MODE2                          00000002
LC2OE                             00000006
LC2OUT                            00000005
LC2POL                            00000007
LC3D1S0                           00000000
LC3D1S1                           00000001
LC3D1S2                           00000002
LC3D2S0                           00000004
LC3D2S1                           00000005
LC3D2S2                           00000006
LC3D3S0                           00000000
LC3D3S1                           00000001
LC3D3S2                           00000002
LC3D4S0                           00000004
LC3D4S1                           00000005
LC3D4S2                           00000006
LC3EN                             00000007
LC3G1D1N                          00000000
LC3G1D1T                          00000001
LC3G1D2N                          00000002
LC3G1D2T                          00000003
LC3G1D3N                          00000004
LC3G1D3T                          00000005
LC3G1D4N                          00000006
LC3G1D4T                          00000007
LC3G1POL                          00000000
LC3G2D1N                          00000000
LC3G2D1T                          00000001
LC3G2D2N                          00000002
LC3G2D2T                          00000003
LC3G2D3N                          00000004
LC3G2D3T                          00000005
LC3G2D4N                          00000006
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

LC3G2D4T                          00000007
LC3G2POL                          00000001
LC3G3D1N                          00000000
LC3G3D1T                          00000001
LC3G3D2N                          00000002
LC3G3D2T                          00000003
LC3G3D3N                          00000004
LC3G3D3T                          00000005
LC3G3D4N                          00000006
LC3G3D4T                          00000007
LC3G3POL                          00000002
LC3G4D1N                          00000000
LC3G4D1T                          00000001
LC3G4D2N                          00000002
LC3G4D2T                          00000003
LC3G4D3N                          00000004
LC3G4D3T                          00000005
LC3G4D4N                          00000006
LC3G4D4T                          00000007
LC3G4POL                          00000003
LC3INTN                           00000003
LC3INTP                           00000004
LC3MODE0                          00000000
LC3MODE1                          00000001
LC3MODE2                          00000002
LC3OE                             00000006
LC3OUT                            00000005
LC3POL                            00000007
LC4D1S0                           00000000
LC4D1S1                           00000001
LC4D1S2                           00000002
LC4D2S0                           00000004
LC4D2S1                           00000005
LC4D2S2                           00000006
LC4D3S0                           00000000
LC4D3S1                           00000001
LC4D3S2                           00000002
LC4D4S0                           00000004
LC4D4S1                           00000005
LC4D4S2                           00000006
LC4EN                             00000007
LC4G1D1N                          00000000
LC4G1D1T                          00000001
LC4G1D2N                          00000002
LC4G1D2T                          00000003
LC4G1D3N                          00000004
LC4G1D3T                          00000005
LC4G1D4N                          00000006
LC4G1D4T                          00000007
LC4G1POL                          00000000
LC4G2D1N                          00000000
LC4G2D1T                          00000001
LC4G2D2N                          00000002
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

LC4G2D2T                          00000003
LC4G2D3N                          00000004
LC4G2D3T                          00000005
LC4G2D4N                          00000006
LC4G2D4T                          00000007
LC4G2POL                          00000001
LC4G3D1N                          00000000
LC4G3D1T                          00000001
LC4G3D2N                          00000002
LC4G3D2T                          00000003
LC4G3D3N                          00000004
LC4G3D3T                          00000005
LC4G3D4N                          00000006
LC4G3D4T                          00000007
LC4G3POL                          00000002
LC4G4D1N                          00000000
LC4G4D1T                          00000001
LC4G4D2N                          00000002
LC4G4D2T                          00000003
LC4G4D3N                          00000004
LC4G4D3T                          00000005
LC4G4D4N                          00000006
LC4G4D4T                          00000007
LC4G4POL                          00000003
LC4INTN                           00000003
LC4INTP                           00000004
LC4MODE0                          00000000
LC4MODE1                          00000001
LC4MODE2                          00000002
LC4OE                             00000006
LC4OUT                            00000005
LC4POL                            00000007
LCEN                              00000007
LCINTN                            00000003
LCINTP                            00000004
LCMODE0                           00000000
LCMODE1                           00000001
LCMODE2                           00000002
LCOE                              00000006
LCOUT                             00000005
LFIOFR                            00000001
LWLO                              00000005
MC1OUT                            00000000
MC2OUT                            00000001
MCLC1OUT                          00000000
MCLC2OUT                          00000001
MCLC3OUT                          00000002
MCLC4OUT                          00000003
N1CKS0                            00000000
N1CKS1                            00000001
N1EN                              00000007
N1OE                              00000006
N1OUT                             00000005
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

N1PFM                             00000000
N1POL                             00000004
N1PWS0                            00000005
N1PWS1                            00000006
N1PWS2                            00000007
NCO1ACC                           00000498
NCO1ACC0                          00000000
NCO1ACC1                          00000001
NCO1ACC10                         00000002
NCO1ACC11                         00000003
NCO1ACC12                         00000004
NCO1ACC13                         00000005
NCO1ACC14                         00000006
NCO1ACC15                         00000007
NCO1ACC16                         00000000
NCO1ACC17                         00000001
NCO1ACC18                         00000002
NCO1ACC19                         00000003
NCO1ACC2                          00000002
NCO1ACC3                          00000003
NCO1ACC4                          00000004
NCO1ACC5                          00000005
NCO1ACC6                          00000006
NCO1ACC7                          00000007
NCO1ACC8                          00000000
NCO1ACC9                          00000001
NCO1ACCH                          00000499
NCO1ACCL                          00000498
NCO1ACCU                          0000049A
NCO1CLK                           0000049F
NCO1CON                           0000049E
NCO1IE                            00000002
NCO1IF                            00000002
NCO1INC                           0000049B
NCO1INC0                          00000000
NCO1INC1                          00000001
NCO1INC10                         00000002
NCO1INC11                         00000003
NCO1INC12                         00000004
NCO1INC13                         00000005
NCO1INC14                         00000006
NCO1INC15                         00000007
NCO1INC2                          00000002
NCO1INC3                          00000003
NCO1INC4                          00000004
NCO1INC5                          00000005
NCO1INC6                          00000006
NCO1INC7                          00000007
NCO1INC8                          00000000
NCO1INC9                          00000001
NCO1INCH                          0000049C
NCO1INCL                          0000049B
NCO1INCU                          0000049D
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

NCO1SEL                           00000000
NCOSEL                            00000000
NOT_BOR                           00000000
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
OERR                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000005
P                                 00000004
PCIE                              00000006
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PEN                               00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000007
PORTA                             0000000C
PORTB                             0000000D
PORTC                             0000000E
PORT_ICDCLK                       00000006
PORT_ICDDAT                       00000007
PR2                               0000001B
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PWM1CON                           00000613
PWM1CON0                          00000613
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

PWM1DCH                           00000612
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCL                           00000611
PWM1DCL0                          00000006
PWM1DCL1                          00000007
PWM1EN                            00000007
PWM1OE                            00000006
PWM1OUT                           00000005
PWM1POL                           00000004
PWM2CON                           00000616
PWM2CON0                          00000616
PWM2DCH                           00000615
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCL                           00000614
PWM2DCL0                          00000006
PWM2DCL1                          00000007
PWM2EN                            00000007
PWM2OE                            00000006
PWM2OUT                           00000005
PWM2POL                           00000004
PWM3CON                           00000619
PWM3CON0                          00000619
PWM3DCH                           00000618
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCL                           00000617
PWM3DCL0                          00000006
PWM3DCL1                          00000007
PWM3EN                            00000007
PWM3OE                            00000006
PWM3OUT                           00000005
PWM3POL                           00000004
PWM4CON                           0000061C
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

PWM4CON0                          0000061C
PWM4DCH                           0000061B
PWM4DCH0                          00000000
PWM4DCH1                          00000001
PWM4DCH2                          00000002
PWM4DCH3                          00000003
PWM4DCH4                          00000004
PWM4DCH5                          00000005
PWM4DCH6                          00000006
PWM4DCH7                          00000007
PWM4DCL                           0000061A
PWM4DCL0                          00000006
PWM4DCL1                          00000007
PWM4EN                            00000007
PWM4OE                            00000006
PWM4OUT                           00000005
PWM4POL                           00000004
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
RSEN                              00000001
RSTVEC                            00000000
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
Reserved                          00000000
S                                 00000003
SBCDE                             00000002
SBOREN                            00000007
SCIE                              00000005
SCKP                              00000004
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

SCS0                              00000000
SCS1                              00000001
SDAHT                             00000003
SEN                               00000000
SENDB                             00000003
SMP                               00000007
SOSCR                             00000007
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SREN                              00000005
SSP1ADD                           00000212
SSP1BUF                           00000211
SSP1CON1                          00000215
SSP1CON2                          00000216
SSP1CON3                          00000217
SSP1IE                            00000003
SSP1IF                            00000003
SSP1MSK                           00000213
SSP1STAT                          00000214
SSPADD                            00000212
SSPBUF                            00000211
SSPCON                            00000215
SSPCON1                           00000215
SSPCON2                           00000216
SSPCON3                           00000217
SSPEN                             00000005
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000213
SSPOV                             00000006
SSPSTAT                           00000214
SSSEL                             00000004
SSTEP                             00000005
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             0000008D
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             0000008E
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRIS_ICDCLK                       00000002
TRIS_ICDDAT                       00000003
TRMT                              00000001
TRP0HLTF                          00000006
TRP1HLTF                          00000007
TSEN                              00000005
TSRNG                             00000004
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
UA                                00000001
UART_STATE_BREAK                  00000000
UART_STATE_DATA                   00000002
UART_STATE_START                  00000001
USRHLTF                           00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WCOL                              00000007
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WPUB                              0000020D
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

WRERR                             00000003
WUE                               00000001
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     0000FDFF
_BOREN_OFF                        0000F9FF
_BOREN_ON                         0000FFFF
_BOREN_SBODEN                     0000FBFF
_BORV_HI                          0000FBFF
_BORV_LO                          0000FFFF
_CLKOUTEN_OFF                     0000FFFF
_CLKOUTEN_ON                      0000F7FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           0000FFFF
_CP_ON                            0000FF7F
_DEVID1                           00008006
_FCMEN_OFF                        0000DFFF
_FCMEN_ON                         0000FFFF
_FOSC_ECH                         0000FFFF
_FOSC_ECL                         0000FFFD
_FOSC_ECM                         0000FFFE
_FOSC_EXTRC                       0000FFFB
_FOSC_HS                          0000FFFA
_FOSC_INTOSC                      0000FFFC
_FOSC_LP                          0000FFF8
_FOSC_XT                          0000FFF9
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_IESO_OFF                         0000EFFF
_IESO_ON                          0000FFFF
_LPBOR_OFF                        0000FFFF
_LPBOR_ON                         0000F7FF
_LVP_OFF                          0000DFFF
_LVP_ON                           0000FFFF
_MCLRE_OFF                        0000FFBF
_MCLRE_ON                         0000FFFF
_PWRTE_OFF                        0000FFFF
_PWRTE_ON                         0000FFDF
_STVREN_OFF                       0000FDFF
_STVREN_ON                        0000FFFF
_WDTE_NSLEEP                      0000FFF7
_WDTE_OFF                         0000FFE7
_WDTE_ON                          0000FFFF
_WDTE_SWDTEN                      0000FFEF
_WRT_ALL                          0000FFFC
_WRT_BOOT                         0000FFFE
_WRT_HALF                         0000FFFD
_WRT_OFF                          0000FFFF
__16F1508                         00000001
boot                              000001BC
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

channel_address_table             00000020
comparator_init                   00000094
comparator_isr                    000000B3
delay                             00000020
dmx0                              00000025
dmx1                              00000026
dmx2                              00000027
dmx3                              00000028
dmx_0_high                        00000071
dmx_0_low                         00000070
dmx_1_high                        00000073
dmx_1_low                         00000072
dmx_2_high                        00000075
dmx_2_low                         00000074
dmx_3_high                        00000077
dmx_3_low                         00000076
dmx_init                          00000057
level                             00000029
main                              000001CB
main2                             000001CD
mainlp                            000001D0
pwm_init                          00000192
pwm_off                           00000199
pwm_set_channels                  000001A3
pwm_set_channels_ok               000001A7
pwm_sync                          0000019F
ram                               00000020
system_halt                       00000056
system_init                       00000040
system_isr                        00000053
system_isr_return                 00000055
system_start                      0000004F
timer_init                        00000154
timer_isr                         0000016B
timer_isr_return                  00000184
timer_isr_setpwm                  00000183
timer_reload_high                 000000FD
timer_reload_low                  000000EF
timer_zero                        00000185
txloop                            000001DB
uart_count_high                   00000023
uart_count_low                    00000022
uart_data                         00000024
uart_init                         000000BC
uart_isr                          000000D0
uart_isr_return                   00000153
uart_state                        00000021
uart_state_break                  000000D8
uart_state_break_discard          000000E2
uart_state_check_data             00000100
uart_state_check_start            000000E4
uart_state_data                   00000105
uart_state_data_dmx1              00000117
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-20-2013  15:22:49         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

uart_state_data_dmx2              00000122
uart_state_data_dmx3              0000012D
uart_state_data_frame             0000014B
uart_state_data_inc               00000138
uart_state_data_noinc             0000013C
uart_state_error                  0000014F
uart_state_start                  000000E9
uart_state_start_data             000000EE
uart_state_start_detected         000000F5

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    95 reported,     0 suppressed

