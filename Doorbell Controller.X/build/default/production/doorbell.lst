MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; Program - dmxpack.asm
                      00003 ;
                      00004 ; Written by Michael Bengtson  21-Oct-2013
                      00005 ;
                      00006 ; This is the code for the controller that handles the doorbells, the Seeburg
                      00007 ; jukebox remote and any alerts.  The system consists of an Ethernet to RS-232
                      00008 ; converter, power supply for the system, power supply for the jukebox remote,
                      00009 ; two MP3 player boards and the processor with associated electronics.
                      00010 ; See the schematic for details.
                      00011 ;
                      00012 ; Operation - The doorbells are connected into the system via RJ-45 connectors.
                      00013 ; Each doorbell is supplied with +5.0v for the led ring in the button.  The
                      00014 ; buttons are each tied to an input on the processor.  The button press can be
                      00015 ; detected and then an RS-232 command sent to the Mac Mini via the Ethernet to
                      00016 ; RS-232 converter.  The Mac Mini then determines what MP3 to play and sends
                      00017 ; a command back to the controller that will initiate an MP3 on the 'alert'
                      00018 ; MP3 player. The Seeburg has a single input line that provides a serial
                      00019 ; signal indicating the selection.  Each transition on this line is timestamped
                      00020 ; and sent to the Mac Mini via the RS-232/Ethernet connection.  The serial
                      00021 ; signal is decoded in the Mac.  The Mac then determines what has been selected
                      00022 ; and sends a command back to the controller which gets routed to the 'Seeburg'
                      00023 ; MP3 player. The Mac can also use other information and send alerts to the
                      00024 ; 'alert' MP3 player.  These could be weather information, clock chimes, etc.
                      00025 
                      00026 ; Here is the protocol that is used between the Mac Mini and the Controller.
                      00027 ;
                      00028 ;   Doorbell Alerts In:
                      00029 ;
                      00030 ;       01:00:TSL:TSH   :   Front Doorbell Pressed
                      00031 ;       01:01:TSL:TSH   :   Front Doorbell Released
                      00032 ;       01:02:TSL:TSH   :   Side Doorbell Pressed
                      00033 ;       01:03:TSL:TSH   :   Side Doorbell Released
                      00034 ;       01:04:TSL:TSH   :   Guest Doorbell Pressed
                      00035 ;       01:05:TSL:TSH   :   Guest Doorbell Released
                      00036 ;
                      00037 ;   Seeburg Selection In:
                      00038 ;
                      00039 ;       01:06:TSL:TSH   :   Seeburg Contact Closed
                      00040 ;       01:07:TSL:TSH   :   Seeburg Contact Open
                      00041 ;
                      00042 ;   MP3 Commands:
                      00043 ;
                      00044 ;       02:01:nn        ;   Plays Alert Track nn (0-255)
                      00045 ;       02:02:nn        :   Plays Seeburg Track nn (0-255)
                      00046 ;
                      00047 ;   Seeburg tracks are letter * 10 + number.
                      00048 ;       A0 = Track 0
                      00049 ;       A1 = Track 1
                      00050 ;       B0 = Track 10
                      00051 ;       V0 = Track 190
                      00052 ;       V9 = Track 199
                      00053 ;
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;   Doorbell tracks are as follows:
                      00055 ;       Front = Track 0
                      00056 ;       Side = Track 1
                      00057 ;       Guest = Track 2
                      00058 
                      00059 ;
                      00060 ; Processor is PIC16F1508.  
                      00061 ; Pin out for the chip is as follow:
                      00062 ;
                      00063 ;       Pin 01 : Vdd : +5.0V
                      00064 ;       Pin 02 : RA5 : Clock In  20Mhz Oscillator
                      00065 ;       Pin 03 : RA4 : NC
                      00066 ;       Pin 04 : RA3 : ICSP - Program
                      00067 ;       Pin 05 : RC5 : NC
                      00068 ;       Pin 06 : RC4 : DEBUG - UART
                      00069 ;       Pin 07 : RC3 : Seeburg Select
                      00070 ;       Pin 08 : RC6 : DEBUG - BUTTONS
                      00071 ;       Pin 09 : RC7 : DEBUG - TIMER
                      00072 ;       Pin 10 : RB7 : TX - To Ethernet Converter
                      00073 ;       Pin 11 : RB6 : Alert MP3 TX
                      00074 ;       Pin 12 : RB5 : RX - From Ethernet Converter
                      00075 ;       Pin 13 : RB4 : Seeburg MP3 TX
                      00076 ;       Pin 14 : RC2 : Doorbell Guest
                      00077 ;       Pin 15 : RC1 : Doorbell Side
                      00078 ;       Pin 16 : RC0 : Doorbell Front
                      00079 ;       Pin 17 : RA2 : DEBUG - BAT
                      00080 ;       Pin 18 : RA1 : ICSP - Clock
                      00081 ;       Pin 19 : RA0 : ICSP - Data
                      00082 ;       Pin 20 : Vss : 0.0V - GND
                      00083 
                      00084 ; 21-Oct-2013 : Starting to write the code using the DMX controller code as
                      00085 ;               base.
                      00086 
                      00087 ; NEXT STEPS :
                      00088 ;
                      00089 ;   * Check configuration bits.
                      00090 ;   * Get programming working and check for timer pulses with oscilloscope.
                      00091 ;   * Design Mac / Controller communication.
                      00092 ;   * Get PIC UART Sending At 1200 Baud
                      00093 ;   * Decoding button presses.
                      00094 ;   * Write UART Send Routine With Circular Queue 16 Bytes Is Good
                      00095 ;   * Write Java code to receive from Ethernet/RS-232 converter.
                      00096 ;   * Get doorbell buttons to send commands to Mac.
                      00097 ;   * Write Java state machines to decode in bound data.
                      00098 ;   * Get PIC UART Receiving At 2400 Baud
                      00099 ;   * Write 2400 Bit Banged UART Code ... TX Only
                      00100 ;   Write state machine to take commands and send to MP3 channels.
                      00101 ;   Clean up RAM storage assignments.
                      00102 ;   ...
                      00103 
                      00104         list    p=16f1508
                      00105         include <p16F1508.inc>
                      00001         LIST
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F1508 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2012 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      01952         LIST
                      00106 
                      00107 ; Configuration bits are listed here.  There are two configuration words.
                      00108 ;
                      00109 ; CONFIG1 : 0x00e2  : 0x0fa with watch dog timer.
                      00110 ;
                      00111 ;       Bit 13    :   0 : Disable Fail Safe Clock Monitor
                      00112 ;       Bit 12    :   0 : Disable Internal/External Switch Over
                      00113 ;
                      00114 ;       Bit 11    :   0 : Enable CLKOUT on the CLKOUT Pin
                      00115 ;       Bit 10-09 :  00 : Disable Brown-Out Detection
                      00116 ;       Bit 08    :   0 : Unimplemented  Reads as "1"
                      00117 
                      00118 ;       Bit 07    :   1 : Disable Code Protection
                      00119 ;       Bit 06    :   1 : MCLR is Reset Signal
                      00120 ;       Bit 05    :   1 : Disable Power Up Timer
                      00121 ;       Bit 04-03 :  00 : Disable Watch Dog Timer
                      00122 ;       Bit 04-03 :  11 : Enable Watch Dog Timer.
                      00123 ;       Bit 02-00 : 010 : HS Oscillator On OSC1 and OSC2
                      00124 ;
                      00125 ; CONFIG2 : 0x0803
                      00126 ;
                      00127 ;       Bit 13    :   0 : High Voltage Programming on MCLR
                      00128 ;       Bit 12    :   0 : In-Circuit Debugger Enabled
                      00129 
                      00130 ;       Bit 11    :   1 : Disable Low Power Brown Out Reset
                      00131 ;       Bit 10    :   0 : Brown Out High Trip Point Selected (Not Used)
                      00132 ;       Bit 09    :   0 : Disable Stack Over/Underflow Reset
                      00133 ;       Bit 08-02 :   0 : Unimplemented  Reads as "1"
                      00134 ;       Bit 01-00 :  11 : Write Protection Off
                      00135 
8007   00FA           00136         __CONFIG        _CONFIG1, 0x00fa
8008   0803           00137         __CONFIG        _CONFIG2, 0x0803
                      00138 
                      00139 ;  Define parameters about this device.
  00000002            00140 DEVICE_TYPE_DMX_DEVICE  equ             002H
  00000000            00141 DEVICE_VERSION_MINOR    equ             000H
  00000001            00142 DEVICE_VERSION_MAJOR    equ             001H
                      00143 
                      00144 ;  About the channel assignments ...
                      00145 ;
                      00146 ;  The block of code at 0x20 (note that it is on a 32 byte boundary) holds the
                      00147 ;  DMX channel assignments for the board channels 0-3.  It's a small map table.
                      00148 ;  The table can be commented out if the board already has had the map set.
                      00149 ;  If the board has not had the map set, then the channel addresses should be
                      00150 ;  set (CHANNEL_ADDRESS_0 through 3), the code uncommented and the board loaded.
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00151 ;
                      00152 ;  When the board starts up, the addresses are read from the program flash at
                      00153 ;  0x20 and placed into high ram for easy accessibility.
                      00154 
                      00155 ;  Define the DMX addresses for each channel.  These do not need to be
                      00156 ;  sequential and may be the same as in another DMX device.
                      00157 
  00000018            00158 CHANNEL_ADDRESS_0           equ     .24
  00000019            00159 CHANNEL_ADDRESS_1           equ     .25
  0000001A            00160 CHANNEL_ADDRESS_2           equ     .26
  0000001B            00161 CHANNEL_ADDRESS_3           equ     .27
                      00162 
                      00163 ;  Uncomment this table if the board needs to have it's channel map set.
                      00164 
                      00165     org     0x20
0020                  00166 channel_address_table
0020   0018           00167 CHANNEL_ADD_0_LOW   dw  CHANNEL_ADDRESS_0&0xff
0021   0000           00168 CHANNEL_ADD_0_HIGH  dw  CHANNEL_ADDRESS_0>>8
0022   0019           00169 CHANNEL_ADD_1_LOW   dw  CHANNEL_ADDRESS_1&0xff
0023   0000           00170 CHANNEL_ADD_1_HIGH  dw  CHANNEL_ADDRESS_1>>8
0024   001A           00171 CHANNEL_ADD_2_LOW   dw  CHANNEL_ADDRESS_2&0xff
0025   0000           00172 CHANNEL_ADD_2_HIGH  dw  CHANNEL_ADDRESS_2>>8
0026   001B           00173 CHANNEL_ADD_3_LOW   dw  CHANNEL_ADDRESS_3&0xff
0027   0000           00174 CHANNEL_ADD_3_HIGH  dw  CHANNEL_ADDRESS_3>>8
                      00175 
                      00176 ;  Define the locations in RAM necessary.  Valid RAM locations are 20-5F.
                      00177 ;  Only 64 bytes to use them wisely.
                      00178 
  00000020            00179 ram             equ     0x20            ; First address of available RAM
                      00180 
                      00181 ;  Define the locations in RAM for holding the channel addresses.
                      00182 ;    cblock  0x70
                      00183 ;        dmx_0_low
                      00184 ;        dmx_0_high
                      00185 ;        dmx_1_low
                      00186 ;        dmx_1_high
                      00187 ;        dmx_2_low
                      00188 ;        dmx_2_high
                      00189 ;        dmx_3_low
                      00190 ;        dmx_3_high
                      00191 ;    endc
                      00192 
                      00193 ;  Define all the variables used for this code.  These should fit between
                      00194 ;  0x20 and 0x7f.
                      00195         cblock 0x20
                      00196         endc
                      00197 
                      00198 ; ------------------------------------------------------------------------------
                      00199 ;
                      00200 ;  Vector Table
                      00201 ;
                      00202 ;  Setup the reset and interrupt vectors for the chip.
                      00203 
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00204         org             0x00            ; Set program memory base at reset vector 0x00.
0000   2???           00205         goto    boot            ; Go to boot code.
                      00206 
                      00207         org             0x04
0004   2???           00208         goto    system_isr                      ; Handle interrupts.
                      00209 
                      00210 ;
                      00211 ; ------------------------------------------------------------------------------
                      00212 
                      00213 ; ------------------------------------------------------------------------------
                      00214 ;
                      00215 ;  System Module
                      00216 ;
                      00217 ;  Here is where we initialize all the functions on the chip.
                      00218 
                      00219         org             0x40
                      00220 
                      00221 ;  Routine - system_init : Initializes the processor.
0040                  00222 system_init
                      00223 
0040   0020           00224         banksel INTCON
0041   138B           00225         bcf             INTCON,GIE              ; Disable all interrupts.
0042   120B           00226         bcf             INTCON,INTE
                      00227 
                      00228     ; Set the clock to external 20Mhz.
0043   0021           00229     banksel OSCCON
0044   3000           00230     movlw   0x00            ; Clock is external
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0045   0099           00231     movwf   OSCCON
                      00232 
                      00233     ; Set weak pull up resisters to be controlled individually.
0046   0021           00234     banksel OPTION_REG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0047   1395           00235     bcf     OPTION_REG,NOT_WPUEN
                      00236 
                      00237     ; Set all ports to not be analog.  Individual drivers can change the bits.
0048   0023           00238     banksel ANSELC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0049   018E           00239     clrf ANSELC
                      00240 
004A   0023           00241     banksel ANSELB
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
004B   018D           00242     clrf    ANSELB
                      00243 
004C   0023           00244     banksel ANSELA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
004D   018C           00245     clrf    ANSELA
                      00246 
                      00247     ;  We are done setting everything up, go to main.
004E   0008           00248         return          ; All done so return.
                      00249 
                      00250 ;  Routine - system_start : This final system startup items such as
                      00251 ;  enabling interrupts.
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004F                  00252 system_start
                      00253 
                      00254         ;  Enable interrupts.
004F   0020           00255     banksel INTCON
0050   170B           00256     bsf     INTCON,PEIE     ; Enable peripheral interrupts.
0051   178B           00257     bsf     INTCON,GIE      ; Enable global interrupts.
                      00258 
                      00259     ;  Return to the caller.
0052   0008           00260     return
                      00261 
                      00262 
                      00263 ;  Routine - system_isr : This routine handles the interrupts for the
                      00264 ;  processor.  Simply save state then call each potential interrupt
                      00265 ;  source.
                      00266 
0053                  00267 system_isr
                      00268 
0053   2???           00269         call    timer_isr
                      00270 ;    call    uart_isr
                      00271 
0054                  00272 system_isr_return
0054   0009           00273         retfie
                      00274 
                      00275 ;  Routine - system_halt : If there are any errors, then the code jumps here
                      00276 ;  to hopefully report the error.
                      00277 
0055                  00278 system_halt
0055   2???           00279     goto    system_halt
                      00280 
                      00281 ;  System Module : END
                      00282 ;
                      00283 ; ------------------------------------------------------------------------------
                      00284 
                      00285 
                      00286 ; ------------------------------------------------------------------------------
                      00287 ;
                      00288 ;  UART Module
                      00289 ;
                      00290 ;  This module handles the reception of the DMX data.  It is state machine
                      00291 ;  driven.  Data for the specified channels is saved in the RAM.
                      00292 
  00000010            00293 UART_TX_QUEUE_SIZE  equ     010H        ;  TX queue size is 16 bytes.
  00000004            00294 UART_RX_QUEUE_SIZE  equ     004H        ;  TX queue size is 4 bytes.
                      00295 
                      00296 ;  Define variables for the timer 1 module.
                      00297         cblock
  00000020            00298         uart_tx_head
  00000021            00299         uart_tx_tail
  00000022            00300         uart_tx_temp
  00000023            00301         uart_rx_head
  00000024            00302         uart_rx_tail
  00000025            00303         uart_rx_temp
                      00304         endc
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00305 
                      00306     cblock  0x60
  00000060            00307         uart_rx_queue: UART_RX_QUEUE_SIZE
                      00308     endc
                      00309 ;  Define variables for the timer 1 module.
                      00310         cblock 0x70
                      00311 ;        uart_state      ;  State of the uart state machine.
                      00312 ;        uart_count_low  ;  Tracks number of bytes read.
                      00313 ;        uart_count_high
                      00314 ;        uart_data       ;  Stores current channel data.
                      00315 ;        dmx0
                      00316 ;        dmx1
                      00317 ;        dmx2
                      00318 ;        dmx3
  00000070            00319         uart_tx_queue: UART_TX_QUEUE_SIZE
                      00320 ;        uart_tx_head
                      00321 ;        uart_tx_tail
                      00322 ;        uart_tx_temp
                      00323         endc
                      00324     cblock 0x26
                      00325     endc
                      00326 
                      00327 ;  Define uart states.
  00000000            00328 UART_STATE_BREAK    equ     000H        ;  Looking for the gap between packets.
  00000001            00329 UART_STATE_START    equ     001H        ;  Looking for the start character.
  00000002            00330 UART_STATE_DATA     equ     002H        ;  Reading the DMX channel data.
                      00331 
                      00332 ;  Routine - uart_init : This sets up the UART to receive data from the DMX
                      00333 ;  controller.
                      00334 
0056                  00335 uart_init
                      00336 
                      00337     ;  Setup the baud rate generator to 9600 baud.
0056   0023           00338     banksel BAUDCON
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0057   109F           00339     bcf     BAUDCON,WUE     ; Wake up disabled.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0058   101F           00340     bcf     BAUDCON,ABDEN   ; Disable autobaud.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0059   159F           00341     bsf     BAUDCON,BRG16   ;  See formula in documentation.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
005A   151E           00342     bsf     TXSTA,BRGH
                      00343 
005B   0020           00344     banksel uart_tx_head
005C   01A0           00345     clrf    uart_tx_head
005D   01A1           00346     clrf    uart_tx_tail
005E   01A3           00347     clrf    uart_rx_head
005F   01A4           00348     clrf    uart_rx_tail
                      00349 
                      00350     ;  520 is count for baud rate generator to run at 9600 baud.  This is
                      00351     ;  0x0208 in hex.
0060   0023           00352     banksel BAUDCON
0061   3002           00353     movlw   0x02
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0062   009C           00354     movwf   SPBRGH
0063   3008           00355     movlw   0x08
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0064   009B           00356     movwf   SPBRGL
                      00357 
                      00358     ;  Turn on the transmitter.
0065   0023           00359     banksel TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0066   121E           00360     bcf     TXSTA,SYNC      ; Set asynchronous mode.
                      00361 
0067   0023           00362     banksel RCSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0068   179D           00363     bsf     RCSTA,SPEN      ; Enable the UART.
                      00364 
0069   0023           00365     banksel TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006A   169E           00366     bsf     TXSTA,TXEN      ; Enable the transmitter.
                      00367 
                      00368     ;  Set receiver.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006B   131D           00369     bcf     RCSTA,RX9
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006C   161D           00370     bsf     RCSTA,CREN      ; Enable reception.
                      00371 
                      00372     ;  Setup the debug port, PORTC, pin 4.
006D   0021           00373     banksel TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006E   120E           00374     bcf     TRISC,TRISC4
006F   0020           00375     banksel PORTC
0070   120E           00376     bcf     PORTC,RC4
                      00377 
                      00378     ;  Return to the caller.
0071   0008           00379     return;
                      00380 
                      00381 ;  Routine - uart_rx_tick : Looks for a character received and places it
                      00382 ;  in the queue.
                      00383 
0072                  00384 uart_rx_tick
                      00385 
0072   0020           00386     banksel PIR1
0073   1E91           00387     btfss   PIR1,RCIF
0074   2???           00388     goto    uart_rx_tick_return
                      00389 
                      00390     ; We have a character.  Put it in the queue if there is room.
0075   0020           00391     banksel uart_rx_head
                      00392 
0076   0A24           00393     incf    uart_rx_tail,W      ; See if there is room.
0077   3903           00394     andlw   UART_RX_QUEUE_SIZE -1
0078   0623           00395     xorwf   uart_rx_head,W      ; If tail+1 == head, then no room.
0079   1903           00396     btfsc   STATUS,Z
007A   2???           00397     goto    uart_rx_error       ; No room so don't add it.
                      00398 
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00399     ; Move character into the queue.
007B   0023           00400     banksel RCREG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
007C   0819           00401     movfw   RCREG
007D   0020           00402     banksel uart_rx_temp
007E   00A5           00403     movwf   uart_rx_temp
                      00404 
007F   3060           00405     movlw   uart_rx_queue
0080   0084           00406     movwf   FSR0L
0081   0185           00407     clrf    FSR0H
0082   0824           00408     movfw   uart_rx_tail
Message[305]: Using default destination of 1 (file).
0083   0784           00409     addwf   FSR0L
0084   0825           00410     movfw   uart_rx_temp
0085   0080           00411     movwf   INDF0
Message[305]: Using default destination of 1 (file).
0086   0AA4           00412     incf    uart_rx_tail
0087   3003           00413     movlw   UART_RX_QUEUE_SIZE - 1
Message[305]: Using default destination of 1 (file).
0088   05A4           00414     andwf   uart_rx_tail
                      00415 ;    goto    uart_rx_tick_return
                      00416 
                      00417     ; Pulse the UART debug pin.
0089   0020           00418     banksel PORTC
008A   160E           00419     bsf     PORTC,RC4
008B   120E           00420     bcf     PORTC,RC4
008C   2???           00421     goto    uart_rx_tick_return
                      00422 
008D                  00423 uart_rx_error
008D   0023           00424     banksel RCREG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
008E   0819           00425     movfw   RCREG
008F   0020           00426     banksel PORTC
0090   160E           00427     bsf     PORTC,RC4
0091   120E           00428     bcf     PORTC,RC4
0092   160E           00429     bsf     PORTC,RC4
0093   120E           00430     bcf     PORTC,RC4
                      00431 
0094                  00432 uart_rx_tick_return
0094   0008           00433     return
                      00434 
                      00435 ;  Routine - uart_tx_tick : Transmits characters from the queue.
                      00436 
0095                  00437 uart_tx_tick
                      00438 
                      00439     ; If no characters to send, then return.
0095   0020           00440     banksel uart_tx_head
0096   0820           00441     movfw   uart_tx_head
0097   0621           00442     xorwf   uart_tx_tail,W
0098   1903           00443     btfsc   STATUS,Z
0099   2???           00444     goto    uart_tx_tick_return
                      00445 
                      00446     ; If transmitter is not ready, then return.
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009A   0020           00447     banksel PIR1
009B   1E11           00448     btfss   PIR1,TXIF
009C   2???           00449     goto    uart_tx_tick_return
                      00450 
                      00451     ; Send next character then remove it from the queue.
009D   0020           00452     banksel uart_tx_queue
009E   3070           00453     movlw   uart_tx_queue
009F   0084           00454     movwf   FSR0L
00A0   0185           00455     clrf    FSR0H
00A1   0820           00456     movfw   uart_tx_head
Message[305]: Using default destination of 1 (file).
00A2   0784           00457     addwf   FSR0L
00A3   0800           00458     movfw   INDF0
                      00459 
00A4   0023           00460     banksel TXREG
                      00461 ;    movlw   0x55
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A5   009A           00462     movwf   TXREG
                      00463 
00A6   0020           00464     banksel uart_tx_head
Message[305]: Using default destination of 1 (file).
00A7   0AA0           00465     incf    uart_tx_head
00A8   300F           00466     movlw   0x0f
Message[305]: Using default destination of 1 (file).
00A9   05A0           00467     andwf   uart_tx_head
                      00468 
00AA                  00469 uart_tx_tick_return
00AA   0008           00470     return
                      00471 
                      00472 
                      00473 ;  Routine - uart_tx_send_byte : This takes the contents of the W register
                      00474 ;  and appends it to the tail of the queue.  Character is dropped if there
                      00475 ;  is not any room.
                      00476 
00AB                  00477 uart_tx_send_byte
                      00478 
00AB   0020           00479     banksel uart_tx_temp
00AC   00A2           00480     movwf   uart_tx_temp        ; Save the character to put into the queue.
                      00481 
00AD   0A21           00482     incf    uart_tx_tail,W      ; See if there is room.
00AE   390F           00483     andlw   0x0f
00AF   0620           00484     xorwf   uart_tx_head,W      ; If tail+1 == head, then no room.
00B0   1903           00485     btfsc   STATUS,Z
00B1   2???           00486     goto    uart_tx_send_error                      ; No room so don't add it.
                      00487 
00B2   3070           00488     movlw   uart_tx_queue
00B3   0084           00489     movwf   FSR0L
00B4   0185           00490     clrf    FSR0H
00B5   0821           00491     movfw   uart_tx_tail
Message[305]: Using default destination of 1 (file).
00B6   0784           00492     addwf   FSR0L
00B7   0822           00493     movfw   uart_tx_temp
00B8   0080           00494     movwf   INDF0
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[305]: Using default destination of 1 (file).
00B9   0AA1           00495     incf    uart_tx_tail
00BA   300F           00496     movlw   0x0f
Message[305]: Using default destination of 1 (file).
00BB   05A1           00497     andwf   uart_tx_tail
00BC   0008           00498     return
                      00499 
00BD                  00500 uart_tx_send_error
00BD   0064           00501     clrwdt
00BE   2???           00502     goto    uart_tx_send_error
                      00503 
                      00504 
                      00505 ;  UART Module : END
                      00506 ;
                      00507 ; ------------------------------------------------------------------------------
                      00508 
                      00509 
                      00510 ; ------------------------------------------------------------------------------
                      00511 ;
                      00512 ;  BAT Module
                      00513 ;
                      00514 ;  The BAT (Banged Asynchronous Transmitter) only transmits characters using
                      00515 ;  io on the PIC.  There are two tx lines that can be selected from, RB6 is
                      00516 ;  transmit to the Alert MP3 and RB7 is transmit to the Seeburg MP3.
                      00517 ;
                      00518 ;  Transmission is done at 2400 baud for MP3 boards.  This is interrupt driven
                      00519 ;  by the timer tick which is running at the frequency for 2400 baud.
                      00520 
                      00521 ;  Define variables for the bat module.
                      00522 
  00000004            00523 BAT_TX_QUEUE_SIZE  equ     004H        ;  TX queue size is 4 bytes.
                      00524 
                      00525         cblock
  00000026            00526         bat_bit_count
  00000027            00527         bat_data
  00000028            00528         bat_port
  00000029            00529         bat_tx_head
  0000002A            00530         bat_tx_tail
  0000002B            00531         bat_tx_temp
  0000002C            00532         bat_tx_queue: BAT_TX_QUEUE_SIZE
                      00533         endc
                      00534 
                      00535 ;  Routine - bat_init : Sets up the ports for transmitting.  Initializes
                      00536 ;  variables used to transmit.
                      00537 
00BF                  00538 bat_init
                      00539 
                      00540     ;  Turn the tx lines on as outputs and set them.
00BF   0020           00541     banksel PORTB
00C0   160D           00542     bsf     PORTB,RB4
00C1   170D           00543     bsf     PORTB,RB6
00C2   0021           00544     banksel TRISB
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C3   120D           00545     bcf     TRISB,TRISB4
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C4   130D           00546     bcf     TRISB,TRISB6
                      00547 
                      00548     ;  Reset variables.
00C5   0020           00549     banksel bat_bit_count
00C6   01A6           00550     clrf    bat_bit_count
                      00551 
                      00552     ;  Setup the debug port, PORTA, pin 2.
00C7   0021           00553     banksel TRISA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C8   110C           00554     bcf     TRISA,TRISA2
00C9   0020           00555     banksel PORTA
00CA   110C           00556     bcf     PORTA,RC2
                      00557 
00CB   0008           00558     return
                      00559 
                      00560 ;  Routine - bat_set_port : The W register should contain 0x40 to set the
                      00561 ;  port for the Alert MP3 player and 0x80 to set the port for the Seeburg MP3
                      00562 ;  player.
                      00563 
00CC                  00564 bat_set_port
                      00565 
00CC   0020           00566     banksel bat_port
00CD   00A8           00567     movwf   bat_port
00CE   0008           00568     return
                      00569 
                      00570 ;  Routine - bat_ready : Returns Z set if the bat interface is ready to send
                      00571 ;  data.
                      00572 
00CF                  00573 bat_ready
                      00574 
00CF   0020           00575     banksel bat_bit_count
00D0   0826           00576     movfw   bat_bit_count
00D1   0008           00577     return
                      00578 
                      00579 ;  Routine - bat_tick : Handles the bit sending on the specified port.
                      00580 
00D2                  00581 bat_tick
                      00582 
                      00583     ; If the bit count is 0, see if there is another byte to send.
00D2   0020           00584     banksel bat_bit_count
00D3   0826           00585     movfw   bat_bit_count
00D4   1D03           00586     btfss   STATUS,Z
00D5   2???           00587     goto    bat_tick_send_start
                      00588 
                      00589     ; If no characters in the queue, return.
00D6   0020           00590     banksel bat_tx_head
00D7   0829           00591     movfw   bat_tx_head
00D8   062A           00592     xorwf   bat_tx_tail,W
00D9   1903           00593     btfsc   STATUS,Z
00DA   0008           00594     return
                      00595 
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00596     ; If there is another byte, then start it up.
                      00597     ; Send next character then remove it from the queue.
00DB   0020           00598     banksel bat_tx_queue
00DC   302C           00599     movlw   bat_tx_queue
00DD   0084           00600     movwf   FSR0L
00DE   0185           00601     clrf    FSR0H
00DF   0829           00602     movfw   bat_tx_head
Message[305]: Using default destination of 1 (file).
00E0   0784           00603     addwf   FSR0L
00E1   0800           00604     movfw   INDF0
                      00605 
00E2   2???           00606     call    bat_send
                      00607 
00E3   0020           00608     banksel bat_tx_queue
Message[305]: Using default destination of 1 (file).
00E4   0AA9           00609     incf    bat_tx_head
00E5   3003           00610     movlw   BAT_TX_QUEUE_SIZE - 1
Message[305]: Using default destination of 1 (file).
00E6   05A9           00611     andwf   bat_tx_head
00E7   0008           00612     return
                      00613 
                      00614 ;    ; Turn off the lines.
                      00615 ;    banksel PORTB
                      00616 ;    bsf     PORTB,RC4
                      00617 ;    bsf     PORTB,RC6
                      00618 ;    return
                      00619 
                      00620 ;bat_tick_send_startx
                      00621 ;
                      00622 ;    movlw   1
                      00623 ;    xorwf   bat_bit_count,W
                      00624 ;    btfss   STATUS,Z
                      00625 ;    goto    bat_tick_send_start
                      00626 ;
                      00627 ;    ; Set the stop bit.
                      00628 ;    banksel PORTB
                      00629 ;    bsf     STATUS,C
                      00630 ;    goto    bat_tick_set
                      00631 
00E8                  00632 bat_tick_send_start
                      00633 
                      00634     ; If the bit count is 10, then do the start bit.
00E8   300A           00635     movlw   0x0a
00E9   0626           00636     xorwf   bat_bit_count,W
00EA   1D03           00637     btfss   STATUS,Z
00EB   2???           00638     goto    bat_tick_send_stop
                      00639 
                      00640     ; Set the start bit.
00EC   0020           00641     banksel PORTA
00ED   150C           00642     bsf     PORTA,RA2
00EE   110C           00643     bcf     PORTA,RA2
                      00644 
00EF   1003           00645     bcf     STATUS,C
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F0   2???           00646     goto    bat_tick_set
                      00647 
00F1                  00648 bat_tick_send_stop
                      00649 
                      00650     ; If the bit count is 1, then do the stop bit.
00F1   3001           00651     movlw   1
00F2   0626           00652     xorwf   bat_bit_count,W
00F3   1D03           00653     btfss   STATUS,Z
00F4   2???           00654     goto    bat_tick_send_data
                      00655 
                      00656     ; Set the stop bit.
00F5   0020           00657     banksel PORTB
00F6   1403           00658     bsf     STATUS,C
00F7   2???           00659     goto    bat_tick_set
                      00660 
00F8                  00661 bat_tick_send_data
                      00662 
                      00663     ; Get the next bit to send.
00F8   0020           00664     banksel bat_data
Message[305]: Using default destination of 1 (file).
00F9   0CA7           00665     rrf     bat_data
00FA   2???           00666     goto    bat_tick_set
                      00667 
00FB                  00668 bat_tick_set
                      00669 
                      00670     ; Based on the value of the carry, either clear or set the proper port.
00FB   0020           00671     banksel PORTA
00FC   150C           00672     bsf     PORTA,RA2
00FD   110C           00673     bcf     PORTA,RA2
                      00674 
00FE   0020           00675     banksel bat_bit_count
Message[305]: Using default destination of 1 (file).
00FF   03A6           00676     decf    bat_bit_count       ; Always decrement the counter.
                      00677 
0100   1C03           00678     btfss   STATUS,C
0101   2???           00679     goto    bat_send_1
0102   2???           00680     goto    bat_send_0
                      00681 
0103                  00682 bat_send_0
0103   0020           00683     banksel bat_port
0104   1E28           00684     btfss   bat_port,4
0105   2???           00685     goto    bat_send_0_alert
0106   2???           00686     goto    bat_send_0_seeburg
                      00687 
0107                  00688 bat_send_0_alert
0107   0020           00689     banksel PORTB
0108   170D           00690     bsf     PORTB,6
0109   0008           00691     return
                      00692 
010A                  00693 bat_send_0_seeburg
010A   0020           00694     banksel PORTB
010B   160D           00695     bsf     PORTB,4
010C   0008           00696     return
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00697 
010D                  00698 bat_send_1
010D   0020           00699     banksel bat_port
010E   1E28           00700     btfss   bat_port,4
010F   2???           00701     goto    bat_send_1_alert
0110   2???           00702     goto    bat_send_1_seeburg
                      00703 
0111                  00704 bat_send_1_alert
0111   0020           00705     banksel PORTB
0112   130D           00706     bcf     PORTB,6
0113   0008           00707     return
                      00708 
0114                  00709 bat_send_1_seeburg
0114   0020           00710     banksel PORTB
0115   120D           00711     bcf     PORTB,4
0116   0008           00712     return
                      00713 
                      00714 ;  Routine - bat_send : Sends the byte in the W register.  Actually, it sets
                      00715 ;  the data into the driver and sets the bit counter to 10.  1 stop, 1 start
                      00716 ;  and 8 data bits.  All the sending is done with the tick routine.
                      00717 
0117                  00718 bat_send
                      00719 
0117   0020           00720     banksel bat_data
0118   00A7           00721     movwf   bat_data
0119   300A           00722     movlw   0x0a
011A   00A6           00723     movwf   bat_bit_count
011B   0008           00724     return
                      00725 
                      00726 ;  Routine - bat_tx_send_byte : This takes the contents of the W register
                      00727 ;  and appends it to the tail of the queue.  Character is dropped if there
                      00728 ;  is not any room.
                      00729 
011C                  00730 bat_tx_send_byte
                      00731 
011C   0020           00732     banksel bat_tx_temp
011D   00AB           00733     movwf   bat_tx_temp        ; Save the character to put into the queue.
                      00734 
011E   0A2A           00735     incf    bat_tx_tail,W      ; See if there is room.
011F   3903           00736     andlw   BAT_TX_QUEUE_SIZE - 1
0120   0629           00737     xorwf   bat_tx_head,W      ; If tail+1 == head, then no room.
0121   1903           00738     btfsc   STATUS,Z
0122   2???           00739     goto    bat_tx_send_error                      ; No room so don't add it.
                      00740 
0123   302C           00741     movlw   bat_tx_queue
0124   0084           00742     movwf   FSR0L
0125   0185           00743     clrf    FSR0H
0126   082A           00744     movfw   bat_tx_tail
Message[305]: Using default destination of 1 (file).
0127   0784           00745     addwf   FSR0L
0128   082B           00746     movfw   bat_tx_temp
0129   0080           00747     movwf   INDF0
Message[305]: Using default destination of 1 (file).
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012A   0AAA           00748     incf    bat_tx_tail
012B   3003           00749     movlw   BAT_TX_QUEUE_SIZE - 1
Message[305]: Using default destination of 1 (file).
012C   05AA           00750     andwf   bat_tx_tail
012D   0008           00751     return
                      00752 
012E                  00753 bat_tx_send_error
012E   0064           00754     clrwdt
012F   2???           00755     goto    bat_tx_send_error
                      00756 
                      00757 
                      00758 ;  BAT Module : END
                      00759 ;
                      00760 ; ------------------------------------------------------------------------------
                      00761 
                      00762 
                      00763 ; ------------------------------------------------------------------------------
                      00764 ;
                      00765 ;  Timer 1 Module
                      00766 ;
                      00767 ;  The timer 1 module provides the main timing for the controller.  All RS-232
                      00768 ;  communication is setup for 12400 baud.  This is slow but the TX lines to the
                      00769 ;  MP3 player are 'bit banged' so the lower baud rate is easier to manage.
                      00770 ;  The messages are short and delay for a three byte command would be 12.5 ms,
                      00771 ;  which is plenty fast for this application.
                      00772 
                      00773 ;  Define variables for the timer 1 module.
                      00774         cblock
  00000030            00775         timerlo     ;  Low byte of the timer counter.
  00000031            00776                 timerhi     ;  High byte of the timer counter.
  00000032            00777         timerflags  ;  Flags for use in timer module.
                      00778         endc
                      00779 
                      00780 ;  Timer value calculated as 65536-(20,000,000/2400) = 57202 DF72 hex.
                      00781 
  00000072            00782 timer_reload_low        equ             072H
  000000DF            00783 timer_reload_high       equ             0DFH
                      00784 
  00000000            00785 timer_flag_tick     equ     0           ; Bit 0 is set for timer tick code.
                      00786 
                      00787 ;  Routine - timer_init : Set up the timer to give us an interrupt every 1ms.
                      00788 ;  The isr code for this must be VERY lightweight.
                      00789 
0130                  00790 timer_init
                      00791 
0130   0020           00792     banksel T1CON
0131   1718           00793     bsf     T1CON,TMR1CS0    ; Select internal clock.  System Clock.
0132   1398           00794     bcf     T1CON,TMR1CS1
0133   1518           00795     bsf     T1CON,NOT_T1SYNC  ; Not required for internal clock.
0134   1218           00796     bcf     T1CON,T1CKPS0   ; Prescaler 1:1
0135   1298           00797     bcf     T1CON,T1CKPS1
                      00798 
0136   0020           00799     banksel T1GCON
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0137   1399           00800     bcf     T1GCON,TMR1GE
                      00801 
0138   01B0           00802         clrf    timerlo         ; Clear the timer counter.
0139   01B1           00803         clrf    timerhi
                      00804 
013A   30DF           00805     movlw   timer_reload_high       ;  Reload the timer for next value.
013B   0097           00806     movwf   TMR1H
013C   3072           00807     movlw   timer_reload_low
013D   0096           00808     movwf   TMR1L
                      00809 
013E   1011           00810         bcf             PIR1,TMR1IF                             ;  Clear any pending interrupt.
013F   0021           00811         banksel PIE1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0140   1411           00812         bsf             PIE1,TMR1IE                             ;  Enable the interrupts
0141   0020           00813         banksel T1CON
0142   1418           00814         bsf             T1CON,TMR1ON                    ;  Start the timer.
                      00815 
                      00816     ;  Clear timer tick code flag waiting for first full tick.
0143   0020           00817     banksel timerflags
0144   1032           00818     bcf     timerflags,timer_flag_tick
                      00819 
                      00820     ;  Setup the debug port, PORTC, pin 7.
0145   0021           00821     banksel TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0146   138E           00822     bcf     TRISC,TRISC7
0147   0020           00823     banksel PORTC
0148   138E           00824     bcf     PORTC,RC7
                      00825 
0149   0008           00826         return
                      00827 
                      00828 
                      00829 ;  Routine - timer_isr : This is called from the interrupt routine if a timer1
                      00830 ;  interrupt is detected.
                      00831 
014A                  00832 timer_isr
                      00833 
                      00834         ;  Check for a timer interrupt.
014A   0020           00835         banksel PIR1
014B   1C11           00836         btfss   PIR1,TMR1IF                             ;  Check for timer 1 interrupt.
014C   2???           00837         goto    timer_isr_return                ;  If not, return.
                      00838 
014D   0020           00839     banksel T1CON
014E   1018           00840         bcf             T1CON,TMR1ON                    ;  Turn off the timer.
                      00841 
                      00842     ; Reload the timer for the next cycle.
014F   0020           00843     banksel TMR1L
0150   3072           00844         movlw   timer_reload_low                ;  Get low timer value.
0151   0096           00845         movwf   TMR1L                                   ;  Set low byte.
0152   30DF           00846         movlw   timer_reload_high               ;  Get high timer value.
0153   0097           00847         movwf   TMR1H                                   ;  Set high byte.
                      00848 
0154   0020           00849     banksel PIR1
0155   1011           00850         bcf             PIR1,TMR1IF                             ;  Clear any pending interrupt.
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0156   0020           00851     banksel T1CON
0157   1418           00852         bsf             T1CON,TMR1ON                    ;  Turn timer back on.
                      00853 
                      00854     ; pulse the timer debug pin.
0158   0020           00855     banksel PORTC
0159   178E           00856     bsf     PORTC,RC7
015A   138E           00857     bcf     PORTC,RC7
                      00858 
                      00859     ; Increment the timer counter.
Message[305]: Using default destination of 1 (file).
015B   0AB0           00860     incf    timerlo
015C   1903           00861     btfsc   STATUS,Z
Message[305]: Using default destination of 1 (file).
015D   0AB1           00862     incf    timerhi
                      00863 
                      00864     ; Set the timer tick flag.
015E   0020           00865     banksel timerflags
015F   1432           00866     bsf     timerflags,timer_flag_tick
                      00867 
                      00868     ; Call routines that need to run ON THE TICK.
0160   2???           00869     call    bat_tick
                      00870 
0161                  00871 timer_isr_return
0161   0008           00872         return
                      00873 
                      00874 ;  Timer Module : END
                      00875 ;
                      00876 ; ------------------------------------------------------------------------------
                      00877 
                      00878 
                      00879 ; ------------------------------------------------------------------------------
                      00880 ;
                      00881 ;  Button Module
                      00882 ;
                      00883 ;  The button module watches for any changes on the RC0-3 lines and sends
                      00884 ;  change information to the UART and back to the Mac.
                      00885 
  00000001            00886 DOORBELL_FRONT_MASK  equ 1<<RC0
  00000002            00887 DOORBELL_SIDE_MASK   equ 1<<RC1
  00000004            00888 DOORBELL_GUEST_MASK  equ 1<<RC2
  00000008            00889 SEEBURG_SELECT_MASK  equ 1<<RC3
                      00890 
                      00891 ;  Define variables for the button module.
                      00892         cblock
  00000033            00893         button_state    ;  Last state of the buttons.
  00000034            00894         button_current  ;  Current button state read.
  00000035            00895         button_counter  ;  Loop counter for getting presses.
  00000036            00896         button_shift    ;  Place to shift the changed flags.
  00000037            00897         button_temp     ;  Temp storage.
                      00898         endc
                      00899 
                      00900 ;  Routine - button_init : Sets up hardware and software to read the inputs
                      00901 ;  from the doorbell buttons and the seeburg select signal.
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00902 
0162                  00903 button_init
                      00904 
                      00905     ; Set up the lines for inputs.
0162   0021           00906     banksel TRISC
0163   300F           00907     movlw   DOORBELL_FRONT_MASK | DOORBELL_SIDE_MASK | DOORBELL_GUEST_MASK | SEEBURG_SELECT_MASK
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0164   008E           00908     movwf   TRISC
                      00909 
                      00910     ; Set the initial state for the buttons.
0165   0020           00911     banksel button_state
0166   300F           00912     movlw   0x0F            ;  Assume no buttons pressed on power up.
0167   00B3           00913     movwf   button_state
                      00914 
                      00915     ;  Setup the debug port, PORTC, pin 6.
0168   0021           00916     banksel TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0169   130E           00917     bcf     TRISC,TRISC6
016A   0020           00918     banksel PORTC
016B   130E           00919     bcf     PORTC,RC6
                      00920 
                      00921     ; That's it.  Return
016C   0008           00922     return
                      00923 
                      00924 ;  Routine - button_tick : Checks to see if there are any changes on the
                      00925 ;  input lines.  If so, a message is generate to send to the Mac.  This should
                      00926 ;  only be called on the 1ms timer tick.
                      00927 
016D                  00928 button_tick
                      00929 
                      00930     ; Read the inputs then compare to the previous state.
016D   0020           00931     banksel PORTC
016E   080E           00932     movfw   PORTC
016F   390F           00933     andlw   0x0F
0170   00B4           00934     movwf   button_current
0171   0633           00935     xorwf   button_state,W
0172   1903           00936     btfsc   STATUS,Z
0173   2???           00937     goto    button_tick_return
0174   00B6           00938     movwf   button_shift
                      00939 
                      00940     ; pulse the button debug pin.
0175   0020           00941     banksel PORTC
0176   170E           00942     bsf     PORTC,RC6
0177   130E           00943     bcf     PORTC,RC6
0178   170E           00944     bsf     PORTC,RC6
0179   130E           00945     bcf     PORTC,RC6
                      00946 
017A   0020           00947     banksel button_current
017B   0834           00948     movfw   button_current
017C   00B3           00949     movwf   button_state
                      00950 
                      00951     ; W has lower 4 bits set that have a change.  Get the bit numbers that
                      00952     ; are set.
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017D   0020           00953     banksel button_counter
017E   01B5           00954     clrf    button_counter
017F                  00955 button_tick_loop
Message[305]: Using default destination of 1 (file).
017F   0CB6           00956     rrf     button_shift
0180   1C03           00957     btfss   STATUS,C
0181   2???           00958     goto    button_tick_loop_inc
                      00959 
                      00960     ; This bit indicates a change.  Create the second byte of message by
                      00961     ; multiplying the count by two and setting last bit to pressed or released.
Message[305]: Using default destination of 1 (file).
0182   0CB4           00962     rrf     button_current
Message[305]: Using default destination of 1 (file).
0183   0DB5           00963     rlf     button_counter
                      00964 
                      00965     ; Here we create the packet to send to the host controller.
0184   3001           00966     movlw   0x01
0185   2???           00967     call    uart_tx_send_byte
0186   0835           00968     movfw   button_counter
0187   2???           00969     call    uart_tx_send_byte
0188   0830           00970     movfw   timerlo
0189   2???           00971     call    uart_tx_send_byte
018A   0831           00972     movfw   timerhi
018B   2???           00973     call    uart_tx_send_byte
                      00974 
                      00975     ; pulse the button debug pin.
018C   0020           00976     banksel button_counter
018D   0835           00977     movfw   button_counter
018E   3A06           00978     xorlw   0x06
018F   0020           00979     banksel PORTC
0190   1D03           00980     btfss   STATUS,Z
0191   2???           00981     goto    debugset
                      00982 
0192   130E           00983     bcf     PORTC,RC6
0193   2???           00984     goto    debug
                      00985 
0194                  00986 debugset
0194   170E           00987     bsf     PORTC,RC6
                      00988 
0195                  00989 debug
                      00990 
                      00991     ; Undo button_state and counter.
0195   0020           00992     banksel button_counter
Message[305]: Using default destination of 1 (file).
0196   0CB5           00993     rrf     button_counter
Message[305]: Using default destination of 1 (file).
0197   0DB4           00994     rlf     button_current
                      00995 
0198                  00996 button_tick_loop_inc
Message[305]: Using default destination of 1 (file).
0198   0CB4           00997     rrf     button_current
0199   3004           00998     movlw   0x04
019A   0635           00999     xorwf   button_counter,W
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019B   1903           01000     btfsc   STATUS,Z
019C   2???           01001     goto    button_tick_return
                      01002 
Message[305]: Using default destination of 1 (file).
019D   0AB5           01003     incf    button_counter
019E   2???           01004     goto    button_tick_loop
                      01005 
019F                  01006 button_tick_return
                      01007 ;    ; Save current button state.
                      01008 ;    movfw   button_current
                      01009 ;    movwf   button_state
019F   0008           01010     return
                      01011 
                      01012 ;  Button Module : END
                      01013 ;
                      01014 ; ------------------------------------------------------------------------------
                      01015 
                      01016 
                      01017 ; ------------------------------------------------------------------------------
                      01018 ;
                      01019 ;  Command Module
                      01020 ;
                      01021 ;  This module handles commands from the host processor.
                      01022 ;  These are commands that will be sent to the MP3 boards.
                      01023 
                      01024 ;  Routine - command_init : This initializes the state machine that is used
                      01025 ;  to process the commands.
                      01026 
01A0                  01027 command_init
01A0   0008           01028     return
                      01029 
                      01030 ;  Routine - command_tick : This runs the state machine that routes commands
                      01031 ;  to the MP3 boards.
                      01032 
01A1                  01033 command_tick
                      01034 
                      01035     ; If there are not any command bytes, then return.
01A1   0020           01036     banksel uart_rx_head
01A2   0823           01037     movfw   uart_rx_head
01A3   0624           01038     xorwf   uart_rx_tail,W
01A4   1903           01039     btfsc   STATUS,Z
01A5   2???           01040     goto    command_tick_return
                      01041 
                      01042     ; If there are not three bytes, then we need to wait.
                      01043 ;!! What to do if we never hit three characters!  Need to reset after a time
                      01044 ;out period.
01A6   0823           01045     movfw   uart_rx_head
01A7   3E03           01046     addlw   3
01A8   3903           01047     andlw   UART_RX_QUEUE_SIZE-1
01A9   0624           01048     xorwf   uart_rx_tail,W
01AA   1D03           01049     btfss   STATUS,Z
01AB   2???           01050     goto    command_tick_return
                      01051 
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01052     ; If we get here, then we need to process the command.
01AC   01A3           01053     clrf    uart_rx_head
01AD   01A4           01054     clrf    uart_rx_tail
                      01055 
                      01056     ; See what mp3 board to send this to.
01AE   0861           01057     movfw   uart_rx_queue+1
01AF   3A01           01058     xorlw   1
01B0   1D03           01059     btfss   STATUS,Z
01B1   2???           01060     goto    command_seeburg_mp3
                      01061 
01B2                  01062 command_alert_mp3
01B2   3040           01063     movlw   0x40
01B3   2???           01064     call    bat_set_port
01B4   3074           01065     movlw   0x74            ; 't'
01B5   2???           01066     call    bat_tx_send_byte
01B6   0862           01067     movfw   uart_rx_queue+2
01B7   2???           01068     call    bat_tx_send_byte
01B8   2???           01069     goto    command_tick_return
                      01070 
01B9                  01071 command_seeburg_mp3
01B9   3010           01072     movlw   0x10
01BA   2???           01073     call    bat_set_port
01BB   3074           01074     movlw   0x74            ; 't'
01BC   2???           01075     call    bat_tx_send_byte
01BD   0862           01076     movfw   uart_rx_queue+2
01BE   2???           01077     call    bat_tx_send_byte
01BF   2???           01078     goto    command_tick_return
                      01079 
01C0                  01080 command_tick_return
01C0   0008           01081     return
                      01082 
                      01083 ;  Command Module : END
                      01084 ;
                      01085 ; ------------------------------------------------------------------------------
                      01086 
                      01087 
                      01088 ; ------------------------------------------------------------------------------
                      01089 ;
                      01090 ;  Start up the main program.  Call the initialization routines for each of the
                      01091 ;  modules.
                      01092 
01C1                  01093 boot
                      01094 
                      01095     ;  Initialize the system components.
01C1   2???           01096     call    system_init
01C2   2???           01097     call    timer_init
01C3   2???           01098     call    uart_init
01C4   2???           01099     call    button_init
01C5   2???           01100     call    bat_init
01C6   2???           01101     call    command_init
                      01102 
                      01103     ;  Start the system.
01C7   2???           01104     call    system_start
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01105 
                      01106     ;  Start of user code.
01C8                  01107 main
                      01108 
                      01109     ; If we are running here, we should hit the watch dog timer.  Everything
                      01110     ; is probably fine.
01C8   0064           01111     clrwdt
                      01112 
                      01113     ;  Run timer tick code if tick flag is set.
01C9   0020           01114     banksel timerflags
01CA   1C32           01115     btfss   timerflags,timer_flag_tick
01CB   2???           01116     goto    skip_tick_code
                      01117 
                      01118     ;  Run tick code here.
                      01119 
                      01120     ;  Only run button tick every 4 ticks.  This is for button bounce.
01CC   0830           01121     movfw   timerlo
01CD   3903           01122     andlw   0x03
01CE   1903           01123     btfsc   STATUS,Z
01CF   2???           01124     call    button_tick
                      01125 
01D0   2???           01126     call    uart_tx_tick
01D1   2???           01127     call    uart_rx_tick
01D2   2???           01128     call    command_tick
                      01129 
01D3   0020           01130     banksel timerflags
01D4   1032           01131     bcf     timerflags,timer_flag_tick
                      01132 
01D5   2???           01133     goto    main
                      01134 
01D6                  01135 skip_tick_code
01D6   2???           01136     goto    main
                      01137 ;    goto    main
01D7   3010           01138     movlw   0x10
01D8   2???           01139     call    bat_set_port
                      01140 
01D9                  01141 loop
01D9   2???           01142     call    bat_ready
01DA   1D03           01143     btfss   STATUS,Z
01DB   2???           01144     goto    main
                      01145 
01DC   3055           01146     movlw   0x55
01DD   2???           01147     call    bat_send
                      01148     ;  See if the transmitter data register is empty.
                      01149 ;    banksel PIR1
                      01150 ;    btfss   PIR1,TXIF       ;  Skip if ready for a character.
                      01151 ;    goto    main
                      01152 ;
                      01153 ;    banksel TXREG           ;  Send a test character.
                      01154 ;    movlw   0x95
                      01155 ;    movwf   TXREG
01DE   2???           01156     goto    main
                      01157 
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01158 
                      01159 ; End of main program.
                      01160 ;
                      01161 ; ------------------------------------------------------------------------------
                      01162 
00FA 0803             01163         end
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACKTIM                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
AHEN                              00000001
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSB4                             00000004
ANSB5                             00000005
ANSC0                             00000000
ANSC1                             00000001
ANSC2                             00000002
ANSC3                             00000003
ANSC6                             00000006
ANSC7                             00000007
ANSELA                            0000018C
ANSELB                            0000018D
ANSELC                            0000018E
APFCON                            0000011D
BAT_TX_QUEUE_SIZE                 00000004
BAUDCON                           0000019F
BCL1IE                            00000003
BCL1IF                            00000003
BF                                00000000
BKA0                              00000000
BKA1                              00000001
BKA10                             00000002
BKA11                             00000003
BKA12                             00000004
BKA13                             00000005
BKA14                             00000006
BKA2                              00000002
BKA3                              00000003
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

BKA4                              00000004
BKA5                              00000005
BKA6                              00000006
BKA7                              00000007
BKA8                              00000000
BKA9                              00000001
BKEN                              00000007
BKHLT                             00000000
BOEN                              00000004
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSRICDSHAD                        00000FE3
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
C2HYS                             00000001
C2IE                              00000006
C2IF                              00000006
C2INTN                            00000006
C2INTP                            00000007
C2NCH0                            00000000
C2NCH1                            00000001
C2NCH2                            00000002
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2PCH0                            00000004
C2PCH1                            00000005
C2POL                             00000004
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

C2SP                              00000002
C2SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHANNEL_ADDRESS_0                 00000018
CHANNEL_ADDRESS_1                 00000019
CHANNEL_ADDRESS_2                 0000001A
CHANNEL_ADDRESS_3                 0000001B
CHANNEL_ADD_0_HIGH                00000021
CHANNEL_ADD_0_LOW                 00000020
CHANNEL_ADD_1_HIGH                00000023
CHANNEL_ADD_1_LOW                 00000022
CHANNEL_ADD_2_HIGH                00000025
CHANNEL_ADD_2_LOW                 00000024
CHANNEL_ADD_3_HIGH                00000027
CHANNEL_ADD_3_LOW                 00000026
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CKE                               00000006
CKP                               00000004
CLC1CON                           00000F10
CLC1GLS0                          00000F14
CLC1GLS1                          00000F15
CLC1GLS2                          00000F16
CLC1GLS3                          00000F17
CLC1IE                            00000000
CLC1IF                            00000000
CLC1POL                           00000F11
CLC1SEL                           00000001
CLC1SEL0                          00000F12
CLC1SEL1                          00000F13
CLC2CON                           00000F18
CLC2GLS0                          00000F1C
CLC2GLS1                          00000F1D
CLC2GLS2                          00000F1E
CLC2GLS3                          00000F1F
CLC2IE                            00000001
CLC2IF                            00000001
CLC2POL                           00000F19
CLC2SEL0                          00000F1A
CLC2SEL1                          00000F1B
CLC3CON                           00000F20
CLC3GLS0                          00000F24
CLC3GLS1                          00000F25
CLC3GLS2                          00000F26
CLC3GLS3                          00000F27
CLC3IE                            00000002
CLC3IF                            00000002
CLC3POL                           00000F21
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

CLC3SEL0                          00000F22
CLC3SEL1                          00000F23
CLC4CON                           00000F28
CLC4GLS0                          00000F2C
CLC4GLS1                          00000F2D
CLC4GLS2                          00000F2E
CLC4GLS3                          00000F2F
CLC4IE                            00000003
CLC4IF                            00000003
CLC4POL                           00000F29
CLC4SEL0                          00000F2A
CLC4SEL1                          00000F2B
CLCDATA                           00000F0F
CM1CON0                           00000111
CM1CON1                           00000112
CM2CON0                           00000113
CM2CON1                           00000114
CMOUT                             00000115
CREN                              00000004
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
C_SHAD                            00000000
D1N                               00000000
D1S0                              00000000
D1S1                              00000001
D1S2                              00000002
D1T                               00000001
D2N                               00000002
D2S0                              00000004
D2S1                              00000005
D2S2                              00000006
D2T                               00000003
D3N                               00000004
D3S0                              00000000
D3S1                              00000001
D3S2                              00000002
D3T                               00000005
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

D4N                               00000006
D4S0                              00000004
D4S1                              00000005
D4S2                              00000006
D4T                               00000007
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACOE1                            00000005
DACOE2                            00000004
DACPSS                            00000002
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DBGIN0                            00000000
DBGIN1                            00000001
DBGIN10                           00000002
DBGIN11                           00000003
DBGIN12                           00000004
DBGIN13                           00000005
DBGIN2                            00000002
DBGIN3                            00000003
DBGIN4                            00000004
DBGIN5                            00000005
DBGIN6                            00000006
DBGIN7                            00000007
DBGIN8                            00000000
DBGIN9                            00000001
DBGINEX                           00000003
DC                                00000001
DC_SHAD                           00000001
DEVICE_TYPE_DMX_DEVICE            00000002
DEVICE_VERSION_MAJOR              00000001
DEVICE_VERSION_MINOR              00000000
DEVSEL                            00000F95
DEVSEL0                           00000000
DEVSEL1                           00000001
DEVSEL2                           00000002
DHEN                              00000000
DOORBELL_FRONT_MASK               00000001
DOORBELL_GUEST_MASK               00000004
DOORBELL_SIDE_MASK                00000002
D_NOT_A                           00000005
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FREE                              00000004
FREEZ                             00000006
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSC2                          00000003
G1ASDSCLC2                        00000000
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POL                             00000000
G1POLA                            00000003
G1POLB                            00000004
G2POL                             00000001
G3POL                             00000002
G4D1N                             00000000
G4D1T                             00000001
G4D2N                             00000002
G4D2T                             00000003
G4D3N                             00000004
G4D3T                             00000005
G4D4N                             00000006
G4D4T                             00000007
G4POL                             00000003
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFR                            00000004
HFIOFS                            00000000
ICDBK0CON                         00000F9C
ICDBK0H                           00000F9E
ICDBK0L                           00000F9D
ICDCON0                           00000F8D
ICDINSTH                          00000F97
ICDINSTL                          00000F96
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

ICDIO                             00000F8C
ICDSTAT                           00000F91
INBUG                             00000007
INDF0                             00000000
INDF1                             00000001
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCBF                             00000396
IOCBF4                            00000004
IOCBF5                            00000005
IOCBF6                            00000006
IOCBF7                            00000007
IOCBN                             00000395
IOCBN4                            00000004
IOCBN5                            00000005
IOCBN6                            00000006
IOCBN7                            00000007
IOCBP                             00000394
IOCBP4                            00000004
IOCBP5                            00000005
IOCBP6                            00000006
IOCBP7                            00000007
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LATA                              0000010C
LATA0                             00000000
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LATB                              0000010D
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              0000010E
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LAT_ICDCLK                        00000004
LAT_ICDDAT                        00000005
LC1D1S0                           00000000
LC1D1S1                           00000001
LC1D1S2                           00000002
LC1D2S0                           00000004
LC1D2S1                           00000005
LC1D2S2                           00000006
LC1D3S0                           00000000
LC1D3S1                           00000001
LC1D3S2                           00000002
LC1D4S0                           00000004
LC1D4S1                           00000005
LC1D4S2                           00000006
LC1EN                             00000007
LC1G1D1N                          00000000
LC1G1D1T                          00000001
LC1G1D2N                          00000002
LC1G1D2T                          00000003
LC1G1D3N                          00000004
LC1G1D3T                          00000005
LC1G1D4N                          00000006
LC1G1D4T                          00000007
LC1G1POL                          00000000
LC1G2D1N                          00000000
LC1G2D1T                          00000001
LC1G2D2N                          00000002
LC1G2D2T                          00000003
LC1G2D3N                          00000004
LC1G2D3T                          00000005
LC1G2D4N                          00000006
LC1G2D4T                          00000007
LC1G2POL                          00000001
LC1G3D1N                          00000000
LC1G3D1T                          00000001
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

LC1G3D2N                          00000002
LC1G3D2T                          00000003
LC1G3D3N                          00000004
LC1G3D3T                          00000005
LC1G3D4N                          00000006
LC1G3D4T                          00000007
LC1G3POL                          00000002
LC1G4D1N                          00000000
LC1G4D1T                          00000001
LC1G4D2N                          00000002
LC1G4D2T                          00000003
LC1G4D3N                          00000004
LC1G4D3T                          00000005
LC1G4D4N                          00000006
LC1G4D4T                          00000007
LC1G4POL                          00000003
LC1INTN                           00000003
LC1INTP                           00000004
LC1MODE0                          00000000
LC1MODE1                          00000001
LC1MODE2                          00000002
LC1OE                             00000006
LC1OUT                            00000005
LC1POL                            00000007
LC2D1S0                           00000000
LC2D1S1                           00000001
LC2D1S2                           00000002
LC2D2S0                           00000004
LC2D2S1                           00000005
LC2D2S2                           00000006
LC2D3S0                           00000000
LC2D3S1                           00000001
LC2D3S2                           00000002
LC2D4S0                           00000004
LC2D4S1                           00000005
LC2D4S2                           00000006
LC2EN                             00000007
LC2G1D1N                          00000000
LC2G1D1T                          00000001
LC2G1D2N                          00000002
LC2G1D2T                          00000003
LC2G1D3N                          00000004
LC2G1D3T                          00000005
LC2G1D4N                          00000006
LC2G1D4T                          00000007
LC2G1POL                          00000000
LC2G2D1N                          00000000
LC2G2D1T                          00000001
LC2G2D2N                          00000002
LC2G2D2T                          00000003
LC2G2D3N                          00000004
LC2G2D3T                          00000005
LC2G2D4N                          00000006
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

LC2G2D4T                          00000007
LC2G2POL                          00000001
LC2G3D1N                          00000000
LC2G3D1T                          00000001
LC2G3D2N                          00000002
LC2G3D2T                          00000003
LC2G3D3N                          00000004
LC2G3D3T                          00000005
LC2G3D4N                          00000006
LC2G3D4T                          00000007
LC2G3POL                          00000002
LC2G4D1N                          00000000
LC2G4D1T                          00000001
LC2G4D2N                          00000002
LC2G4D2T                          00000003
LC2G4D3N                          00000004
LC2G4D3T                          00000005
LC2G4D4N                          00000006
LC2G4D4T                          00000007
LC2G4POL                          00000003
LC2INTN                           00000003
LC2INTP                           00000004
LC2MODE0                          00000000
LC2MODE1                          00000001
LC2MODE2                          00000002
LC2OE                             00000006
LC2OUT                            00000005
LC2POL                            00000007
LC3D1S0                           00000000
LC3D1S1                           00000001
LC3D1S2                           00000002
LC3D2S0                           00000004
LC3D2S1                           00000005
LC3D2S2                           00000006
LC3D3S0                           00000000
LC3D3S1                           00000001
LC3D3S2                           00000002
LC3D4S0                           00000004
LC3D4S1                           00000005
LC3D4S2                           00000006
LC3EN                             00000007
LC3G1D1N                          00000000
LC3G1D1T                          00000001
LC3G1D2N                          00000002
LC3G1D2T                          00000003
LC3G1D3N                          00000004
LC3G1D3T                          00000005
LC3G1D4N                          00000006
LC3G1D4T                          00000007
LC3G1POL                          00000000
LC3G2D1N                          00000000
LC3G2D1T                          00000001
LC3G2D2N                          00000002
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

LC3G2D2T                          00000003
LC3G2D3N                          00000004
LC3G2D3T                          00000005
LC3G2D4N                          00000006
LC3G2D4T                          00000007
LC3G2POL                          00000001
LC3G3D1N                          00000000
LC3G3D1T                          00000001
LC3G3D2N                          00000002
LC3G3D2T                          00000003
LC3G3D3N                          00000004
LC3G3D3T                          00000005
LC3G3D4N                          00000006
LC3G3D4T                          00000007
LC3G3POL                          00000002
LC3G4D1N                          00000000
LC3G4D1T                          00000001
LC3G4D2N                          00000002
LC3G4D2T                          00000003
LC3G4D3N                          00000004
LC3G4D3T                          00000005
LC3G4D4N                          00000006
LC3G4D4T                          00000007
LC3G4POL                          00000003
LC3INTN                           00000003
LC3INTP                           00000004
LC3MODE0                          00000000
LC3MODE1                          00000001
LC3MODE2                          00000002
LC3OE                             00000006
LC3OUT                            00000005
LC3POL                            00000007
LC4D1S0                           00000000
LC4D1S1                           00000001
LC4D1S2                           00000002
LC4D2S0                           00000004
LC4D2S1                           00000005
LC4D2S2                           00000006
LC4D3S0                           00000000
LC4D3S1                           00000001
LC4D3S2                           00000002
LC4D4S0                           00000004
LC4D4S1                           00000005
LC4D4S2                           00000006
LC4EN                             00000007
LC4G1D1N                          00000000
LC4G1D1T                          00000001
LC4G1D2N                          00000002
LC4G1D2T                          00000003
LC4G1D3N                          00000004
LC4G1D3T                          00000005
LC4G1D4N                          00000006
LC4G1D4T                          00000007
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

LC4G1POL                          00000000
LC4G2D1N                          00000000
LC4G2D1T                          00000001
LC4G2D2N                          00000002
LC4G2D2T                          00000003
LC4G2D3N                          00000004
LC4G2D3T                          00000005
LC4G2D4N                          00000006
LC4G2D4T                          00000007
LC4G2POL                          00000001
LC4G3D1N                          00000000
LC4G3D1T                          00000001
LC4G3D2N                          00000002
LC4G3D2T                          00000003
LC4G3D3N                          00000004
LC4G3D3T                          00000005
LC4G3D4N                          00000006
LC4G3D4T                          00000007
LC4G3POL                          00000002
LC4G4D1N                          00000000
LC4G4D1T                          00000001
LC4G4D2N                          00000002
LC4G4D2T                          00000003
LC4G4D3N                          00000004
LC4G4D3T                          00000005
LC4G4D4N                          00000006
LC4G4D4T                          00000007
LC4G4POL                          00000003
LC4INTN                           00000003
LC4INTP                           00000004
LC4MODE0                          00000000
LC4MODE1                          00000001
LC4MODE2                          00000002
LC4OE                             00000006
LC4OUT                            00000005
LC4POL                            00000007
LCEN                              00000007
LCINTN                            00000003
LCINTP                            00000004
LCMODE0                           00000000
LCMODE1                           00000001
LCMODE2                           00000002
LCOE                              00000006
LCOUT                             00000005
LFIOFR                            00000001
LWLO                              00000005
MC1OUT                            00000000
MC2OUT                            00000001
MCLC1OUT                          00000000
MCLC2OUT                          00000001
MCLC3OUT                          00000002
MCLC4OUT                          00000003
N1CKS0                            00000000
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

N1CKS1                            00000001
N1EN                              00000007
N1OE                              00000006
N1OUT                             00000005
N1PFM                             00000000
N1POL                             00000004
N1PWS0                            00000005
N1PWS1                            00000006
N1PWS2                            00000007
NCO1ACC                           00000498
NCO1ACC0                          00000000
NCO1ACC1                          00000001
NCO1ACC10                         00000002
NCO1ACC11                         00000003
NCO1ACC12                         00000004
NCO1ACC13                         00000005
NCO1ACC14                         00000006
NCO1ACC15                         00000007
NCO1ACC16                         00000000
NCO1ACC17                         00000001
NCO1ACC18                         00000002
NCO1ACC19                         00000003
NCO1ACC2                          00000002
NCO1ACC3                          00000003
NCO1ACC4                          00000004
NCO1ACC5                          00000005
NCO1ACC6                          00000006
NCO1ACC7                          00000007
NCO1ACC8                          00000000
NCO1ACC9                          00000001
NCO1ACCH                          00000499
NCO1ACCL                          00000498
NCO1ACCU                          0000049A
NCO1CLK                           0000049F
NCO1CON                           0000049E
NCO1IE                            00000002
NCO1IF                            00000002
NCO1INC                           0000049B
NCO1INC0                          00000000
NCO1INC1                          00000001
NCO1INC10                         00000002
NCO1INC11                         00000003
NCO1INC12                         00000004
NCO1INC13                         00000005
NCO1INC14                         00000006
NCO1INC15                         00000007
NCO1INC2                          00000002
NCO1INC3                          00000003
NCO1INC4                          00000004
NCO1INC5                          00000005
NCO1INC6                          00000006
NCO1INC7                          00000007
NCO1INC8                          00000000
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

NCO1INC9                          00000001
NCO1INCH                          0000049C
NCO1INCL                          0000049B
NCO1INCU                          0000049D
NCO1SEL                           00000000
NCOSEL                            00000000
NOT_BOR                           00000000
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
OERR                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000005
P                                 00000004
PCIE                              00000006
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PEN                               00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000007
PORTA                             0000000C
PORTB                             0000000D
PORTC                             0000000E
PORT_ICDCLK                       00000006
PORT_ICDDAT                       00000007
PR2                               0000001B
PS0                               00000000
PS1                               00000001
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

PS2                               00000002
PSA                               00000003
PWM1CON                           00000613
PWM1CON0                          00000613
PWM1DCH                           00000612
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCL                           00000611
PWM1DCL0                          00000006
PWM1DCL1                          00000007
PWM1EN                            00000007
PWM1OE                            00000006
PWM1OUT                           00000005
PWM1POL                           00000004
PWM2CON                           00000616
PWM2CON0                          00000616
PWM2DCH                           00000615
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCL                           00000614
PWM2DCL0                          00000006
PWM2DCL1                          00000007
PWM2EN                            00000007
PWM2OE                            00000006
PWM2OUT                           00000005
PWM2POL                           00000004
PWM3CON                           00000619
PWM3CON0                          00000619
PWM3DCH                           00000618
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCL                           00000617
PWM3DCL0                          00000006
PWM3DCL1                          00000007
PWM3EN                            00000007
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

PWM3OE                            00000006
PWM3OUT                           00000005
PWM3POL                           00000004
PWM4CON                           0000061C
PWM4CON0                          0000061C
PWM4DCH                           0000061B
PWM4DCH0                          00000000
PWM4DCH1                          00000001
PWM4DCH2                          00000002
PWM4DCH3                          00000003
PWM4DCH4                          00000004
PWM4DCH5                          00000005
PWM4DCH6                          00000006
PWM4DCH7                          00000007
PWM4DCL                           0000061A
PWM4DCL0                          00000006
PWM4DCL1                          00000007
PWM4EN                            00000007
PWM4OE                            00000006
PWM4OUT                           00000005
PWM4POL                           00000004
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
RSEN                              00000001
RSTVEC                            00000000
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
Reserved                          00000000
S                                 00000003
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

SBCDE                             00000002
SBOREN                            00000007
SCIE                              00000005
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SDAHT                             00000003
SEEBURG_SELECT_MASK               00000008
SEN                               00000000
SENDB                             00000003
SMP                               00000007
SOSCR                             00000007
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SREN                              00000005
SSP1ADD                           00000212
SSP1BUF                           00000211
SSP1CON1                          00000215
SSP1CON2                          00000216
SSP1CON3                          00000217
SSP1IE                            00000003
SSP1IF                            00000003
SSP1MSK                           00000213
SSP1STAT                          00000214
SSPADD                            00000212
SSPBUF                            00000211
SSPCON                            00000215
SSPCON1                           00000215
SSPCON2                           00000216
SSPCON3                           00000217
SSPEN                             00000005
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000213
SSPOV                             00000006
SSPSTAT                           00000214
SSSEL                             00000004
SSTEP                             00000005
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             0000008D
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             0000008E
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRIS_ICDCLK                       00000002
TRIS_ICDDAT                       00000003
TRMT                              00000001
TRP0HLTF                          00000006
TRP1HLTF                          00000007
TSEN                              00000005
TSRNG                             00000004
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
UA                                00000001
UART_RX_QUEUE_SIZE                00000004
UART_STATE_BREAK                  00000000
UART_STATE_DATA                   00000002
UART_STATE_START                  00000001
UART_TX_QUEUE_SIZE                00000010
USRHLTF                           00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WCOL                              00000007
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WPUB                              0000020D
WPUB4                             00000004
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     0000FDFF
_BOREN_OFF                        0000F9FF
_BOREN_ON                         0000FFFF
_BOREN_SBODEN                     0000FBFF
_BORV_HI                          0000FBFF
_BORV_LO                          0000FFFF
_CLKOUTEN_OFF                     0000FFFF
_CLKOUTEN_ON                      0000F7FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           0000FFFF
_CP_ON                            0000FF7F
_DEVID1                           00008006
_FCMEN_OFF                        0000DFFF
_FCMEN_ON                         0000FFFF
_FOSC_ECH                         0000FFFF
_FOSC_ECL                         0000FFFD
_FOSC_ECM                         0000FFFE
_FOSC_EXTRC                       0000FFFB
_FOSC_HS                          0000FFFA
_FOSC_INTOSC                      0000FFFC
_FOSC_LP                          0000FFF8
_FOSC_XT                          0000FFF9
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_IESO_OFF                         0000EFFF
_IESO_ON                          0000FFFF
_LPBOR_OFF                        0000FFFF
_LPBOR_ON                         0000F7FF
_LVP_OFF                          0000DFFF
_LVP_ON                           0000FFFF
_MCLRE_OFF                        0000FFBF
_MCLRE_ON                         0000FFFF
_PWRTE_OFF                        0000FFFF
_PWRTE_ON                         0000FFDF
_STVREN_OFF                       0000FDFF
_STVREN_ON                        0000FFFF
_WDTE_NSLEEP                      0000FFF7
_WDTE_OFF                         0000FFE7
_WDTE_ON                          0000FFFF
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

_WDTE_SWDTEN                      0000FFEF
_WRT_ALL                          0000FFFC
_WRT_BOOT                         0000FFFE
_WRT_HALF                         0000FFFD
_WRT_OFF                          0000FFFF
__16F1508                         00000001
bat_bit_count                     00000026
bat_data                          00000027
bat_init                          000000BF
bat_port                          00000028
bat_ready                         000000CF
bat_send                          00000117
bat_send_0                        00000103
bat_send_0_alert                  00000107
bat_send_0_seeburg                0000010A
bat_send_1                        0000010D
bat_send_1_alert                  00000111
bat_send_1_seeburg                00000114
bat_set_port                      000000CC
bat_tick                          000000D2
bat_tick_send_data                000000F8
bat_tick_send_start               000000E8
bat_tick_send_stop                000000F1
bat_tick_set                      000000FB
bat_tx_head                       00000029
bat_tx_queue                      0000002C
bat_tx_send_byte                  0000011C
bat_tx_send_error                 0000012E
bat_tx_tail                       0000002A
bat_tx_temp                       0000002B
boot                              000001C1
button_counter                    00000035
button_current                    00000034
button_init                       00000162
button_shift                      00000036
button_state                      00000033
button_temp                       00000037
button_tick                       0000016D
button_tick_loop                  0000017F
button_tick_loop_inc              00000198
button_tick_return                0000019F
channel_address_table             00000020
command_alert_mp3                 000001B2
command_init                      000001A0
command_seeburg_mp3               000001B9
command_tick                      000001A1
command_tick_return               000001C0
debug                             00000195
debugset                          00000194
loop                              000001D9
main                              000001C8
ram                               00000020
skip_tick_code                    000001D6
MPASM  5.47  /USERS/MICHAEL/DEVELOPMENT/DOORB   10-30-2013  19:59:15         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

system_halt                       00000055
system_init                       00000040
system_isr                        00000053
system_isr_return                 00000054
system_start                      0000004F
timer_flag_tick                   00000000
timer_init                        00000130
timer_isr                         0000014A
timer_isr_return                  00000161
timer_reload_high                 000000DF
timer_reload_low                  00000072
timerflags                        00000032
timerhi                           00000031
timerlo                           00000030
uart_init                         00000056
uart_rx_error                     0000008D
uart_rx_head                      00000023
uart_rx_queue                     00000060
uart_rx_tail                      00000024
uart_rx_temp                      00000025
uart_rx_tick                      00000072
uart_rx_tick_return               00000094
uart_tx_head                      00000020
uart_tx_queue                     00000070
uart_tx_send_byte                 000000AB
uart_tx_send_error                000000BD
uart_tx_tail                      00000021
uart_tx_temp                      00000022
uart_tx_tick                      00000095
uart_tx_tick_return               000000AA

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    53 reported,     0 suppressed

